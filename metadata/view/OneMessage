{
    "type": "Ext.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "baseCls": null,
        "charMessage": null,
        "cls": [
            "blueBackground"
        ],
        "designer|userAlias": "onemessage",
        "designer|userClassName": "OneMessage",
        "height": null,
        "itemId": "oneMessage",
        "layout": "fit",
        "maxHeight": null,
        "maxWidth": null,
        "minHeight": null,
        "minWidth": null,
        "modal": true,
        "padding": null,
        "scrollable": "vertical",
        "style": [
            "{\r",
            "    background:\"#345777\"\r",
            "}"
        ],
        "width": null
    },
    "configAlternates": {
        "style": "object"
    },
    "designerId": "4a06f8bf-5a77-4ff0-bed7-ec25e5fd1903",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "charMessage",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "Ext.Toolbar",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "docked": "top"
            },
            "designerId": "ea612b72-d860-460f-a619-5137dc963145",
            "cn": [
                {
                    "type": "Ext.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "iconCls": "delete",
                        "itemId": "closeMessageButton",
                        "text": "close"
                    },
                    "designerId": "be331ec6-7c64-4676-a448-d7309f46247a",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onCloseMessageButtonTap",
                                "implHandler": [
                                    "button.up('#oneMessage').destroy();"
                                ],
                                "name": "tap"
                            },
                            "designerId": "a658b1b9-cb9f-44bb-aee1-1787919abcb4"
                        }
                    ]
                },
                {
                    "type": "Ext.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "iconCls": "chatMessages",
                        "itemId": "goToChat",
                        "text": "go to chat"
                    },
                    "designerId": "468d87c5-9937-4723-88b8-aa0e737660ba"
                }
            ]
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "record"
                ],
                "fn": "updateRecord",
                "implHandler": [
                    "if (record)\r",
                    "{\r",
                    "    //this.removeAll(true,true);\r",
                    "    \r",
                    "    if(record.get('read_state')==0&&record.get('out')==0)\r",
                    "    {\r",
                    "        VKM.app.globals.messageIds.push({\r",
                    "            id:record.get('id'),\r",
                    "            //user_id:record.get('user_id'),\r",
                    "            chat_id:record.get('chat_id')               \r",
                    "        })\r",
                    "    }\r",
                    "    \r",
                    "    var body=this.down('#body');\r",
                    "    body.removeAll(true,true);\r",
                    "    this.down('#goToChat').record=record;\r",
                    "\r",
                    "    var date=new Date(parseInt(record.get('date'))*1000);\r",
                    "    var currentDate=new Date(Ext.DateExtras.now());\r",
                    "\r",
                    "    var messageBody=record.get('body');\r",
                    "\r",
                    "    var messageTime=moment(parseInt(record.get('date'))*1000).format('hh:mm');\r",
                    "    var store=Ext.getStore('Chat')\r",
                    "\r",
                    "\r",
                    "\r",
                    "    messageBody= messageBody.replace(/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi,\"<a href='$1' target='_blank' style='color:white!important'>$1</a>\");\r",
                    "    if(record.get('emoji'))\r",
                    "    {\r",
                    "        messageBody=VKM.app.smiles(messageBody);\r",
                    "        messageBody='<div style=\"padding:10px\">'+messageBody+'</div>';\r",
                    "\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        if(messageBody!='')\r",
                    "        {\r",
                    "            messageBody='<div style=\"padding:10px\">'+messageBody+'</div>';\r",
                    "        }\r",
                    "    }\r",
                    "    messageBody=messageBody.replace(/\\r\\n|\\r|\\n/g,\"<br />\");\r",
                    "\r",
                    "\r",
                    "    //console.log(record.getData());\r",
                    "    if (record.get('out')==1)\r",
                    "    {\r",
                    "\r",
                    "        //             this.down('#timeright').setHidden(true);\r",
                    "        //             this.down('#timeleft').setHidden(false);\r",
                    "        //             this.down('#timeleft').setHtml(messageTime);\r",
                    "\r",
                    "\r",
                    "        //this.down('#datetime').setHtml(moment(messageDate).fromNow());\r",
                    "\r",
                    "        body.addCls('triangle');\r",
                    "        body.add({\r",
                    "            xtype: 'component',\r",
                    "            docked:'top',\r",
                    "            cls: 'x-item-message',\r",
                    "            html:messageBody\r",
                    "        })\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "        //             this.down('#timeleft').setHidden(true);\r",
                    "        //             this.down('#timeright').setHidden(false);\r",
                    "        //             this.down('#timeright').setHtml(messageTime);\r",
                    "\r",
                    "        body.addCls('triangle');\r",
                    "        body.add({\r",
                    "            xtype: 'component',\r",
                    "            docked:'top',\r",
                    "            cls: 'x-item-message',\r",
                    "            html:messageBody\r",
                    "        })\r",
                    "    }    ;\r",
                    "\r",
                    "    var params=\r",
                    "        {\r",
                    "            message:record.getData(),\r",
                    "            body:body,\r",
                    "            component:this\r",
                    "        };\r",
                    "    this.renderMessage(params);\r",
                    "\r",
                    "  //  var height = body.getScrollable().getScroller();\r",
                    "//    height.refresh();\r",
                    "\r",
                    "\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "909e8d13-89e0-408d-ac04-e22800c61df1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "params"
                ],
                "fn": "renderMessage",
                "implHandler": [
                    "var record=params.message;\r",
                    "var body=params.body;\r",
                    "var component=params.component;\r",
                    "if(record.geo)\r",
                    "{\r",
                    "    var latitude=record.geo.coordinates.split(' ')[0];\r",
                    "    var longitude=record.geo.coordinates.split(' ')[1];\r",
                    "\r",
                    "    var position = latitude+','+longitude;\r",
                    "    //new google.maps.LatLng(latitude,longitude)\r",
                    "\r",
                    "//     var image = new google.maps.MarkerImage(\r",
                    "//         'resources/images/point.png',\r",
                    "//         new google.maps.Size(32, 31),\r",
                    "//         new google.maps.Point(0, 0),\r",
                    "//         new google.maps.Point(16, 31)\r",
                    "//     )\r",
                    "\r",
                    "//     var shadow = new google.maps.MarkerImage(\r",
                    "//         'resources/images/shadow.png',\r",
                    "//         new google.maps.Size(64, 52),\r",
                    "//         new google.maps.Point(0, 0),\r",
                    "//         new google.maps.Point(-5, 42)\r",
                    "//     )\r",
                    "    \r",
                    "    var url='http://maps.googleapis.com/maps/api/staticmap?center='+position+\r",
                    "        '&zoom=15&size=260x200&maptype=roadmap&markers=color:blue%7C'+position+'&sensor=true'\r",
                    "    \r",
                    "    var title=record.geo.title;\r",
                    "    if(record.geo.place)\r",
                    "    {\r",
                    "        title=record.geo.place.title\r",
                    "    }\r",
                    "    body.add({\r",
                    "        xtype: 'component',\r",
                    "        docked: 'top',\r",
                    "        html:'<img width=100% src='+url+'>'+title+'</img>',\r",
                    "        width: 260,\r",
                    "        margin: 5\r",
                    "    });\r",
                    "\r",
                    "\r",
                    "//     body.add({\r",
                    "//         xtype: 'map',\r",
                    "//         position:position,\r",
                    "//         //title:record.geo.place.title,\r",
                    "//         docked: 'top',\r",
                    "//         height: 200,\r",
                    "//         width: 260,\r",
                    "//         margin: 2,\r",
                    "//         mapOptions:{\r",
                    "//             zoom: 15,\r",
                    "//             center : position,\r",
                    "//             zoomControl: true,\r",
                    "//             scaleControl: true,\r",
                    "//         },\r",
                    "//         listeners: {\r",
                    "//             maprender: function(comp, map) {\r",
                    "\r",
                    "//                 var marker = new google.maps.Marker({\r",
                    "//                     position: comp.config.position,\r",
                    "//                     title : comp.config.title,\r",
                    "//                     map: map\r",
                    "//                 });\r",
                    "//                 var infowindow = new google.maps.InfoWindow({\r",
                    "//                     content: '<div id=\"content\">'+comp.config.title+'<div id=\"content\">'\r",
                    "//                 });\r",
                    "\r",
                    "//                 google.maps.event.addListener(marker, 'click', function() {\r",
                    "//                     infowindow.open(map, marker);\r",
                    "//                 });\r",
                    "//             }\r",
                    "\r",
                    "//         }\r",
                    "//     });\r",
                    "\r",
                    "}\r",
                    "\r",
                    "if(record.attachments)\r",
                    "{\r",
                    "    var attachments=record.attachments\r",
                    "    for (var i=0;i<attachments.length;i++)\r",
                    "    {\r",
                    "        if (attachments[i].type=='photo')\r",
                    "        {\r",
                    "            var description=attachments[i].photo.text;\r",
                    "            description=description.replace(/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi,\"<a href='$1' target='_blank' style='color:white!important'>$1</a>\");\r",
                    "            description=description.replace(/\\r\\n|\\r|\\n/g,\"<br />\");\r",
                    "\r",
                    "            body.add({\r",
                    "                xtype: 'component',\r",
                    "                docked: 'top',\r",
                    "                html:'<img style=\"padding:10px\" width=100% src='+attachments[i].photo.photo_604+'></img>',\r",
                    "                width: 260\r",
                    "                //margin: 2\r",
                    "            });\r",
                    "            //                 this.down('#body').add({\r",
                    "            //                     xtype: 'component',\r",
                    "            //                     docked: 'top',\r",
                    "            //                     html:description,\r",
                    "            //                     style:{\"font-size\":\"0.8em\",\"font-weight\": \"light\"},\r",
                    "            //                     margin: 2\r",
                    "            //                 });\r",
                    "            //            console.log(record.getData());\r",
                    "        }\r",
                    "        if (attachments[i].type=='doc')\r",
                    "\r",
                    "        {\r",
                    "            var icoName='resources/images/ext/32/'+attachments[i].doc.ext.toUpperCase()+'.png';\r",
                    "            if (!VKM.app.globals.docIcons[attachments[i].doc.ext.toUpperCase()])\r",
                    "            {\r",
                    "                icoName='resources/images/ext/32/Default.png';\r",
                    "            }\r",
                    "\r",
                    "            body.add({\r",
                    "                xtype: 'container',\r",
                    "                docked: 'top',\r",
                    "                layout:'hbox',\r",
                    "                cls:\"messageBody\",\r",
                    "                style:{\"background-color\":\"#345777!important\",\"padding\":\"10px\"},\r",
                    "                items:[\r",
                    "                    {\r",
                    "                        xtype:\"container\",\r",
                    "                        flex:1,\r",
                    "//html:'<span style:\"margin-right:5px\" class=\"whiteDocumentIconCls\"></span>\r",
                    "                        html:'<img src=\"'+icoName+'\" style:\"margin-right:5px\"></img><a type=\"doc\" href=\"'+attachments[i].doc.url+'\" style=\"color:white!important;font-size:0.8em;font-weight:light;vertical-align:top;\">'+attachments[i].doc.title+'</a>'                       \r",
                    "\r",
                    "                    },\r",
                    "                    {\r",
                    "                        xtype:'button',\r",
                    "                        //ui:'decline',\r",
                    "                       // docked:'left',\r",
                    "                        ui:'confirm',\r",
                    "                        iconCls:'viewDocument',\r",
                    "                        style:\"margin-left:5px\",\r",
                    "                        url:Ext.clone(attachments[i].doc.url),\r",
                    "                        ext:Ext.clone(attachments[i].doc.ext)\r",
                    "                        //handler:VKM.app.showDocument([attachments[i].doc.url,attachments[i].doc.ext)\r",
                    "                    }\r",
                    "                ],\r",
                    "                margin: 2\r",
                    "            });\r",
                    "\r",
                    "            //            console.log(record.getData());\r",
                    "        }\r",
                    "        if (attachments[i].type=='audio')\r",
                    "        {\r",
                    "\r",
                    "            body.add({\r",
                    "                xtype:'container',\r",
                    "                width:260,\r",
                    "                docked:'top',\r",
                    "                //margin:5,\r",
                    "                items:[\r",
                    "//                     {\r",
                    "//                         xtype:\"container\",\r",
                    "//                         flex:1,\r",
                    "// //html:'<span style:\"margin-right:5px\" class=\"whiteDocumentIconCls\"></span>\r",
                    "//                         html:'<audio data-controls=\"true\" style=\"width:100%;\">'+\r",
                    "//                         '<source src=\"'+attachments[i].audio.url+'\" type=\"audio/mp3\" /></audio>'                        \r",
                    "                        \r",
                    "//                     },\r",
                    "\r",
                    "                    Ext.create('ux.AudioPlayer',{\r",
                    "                        xtype: 'audioplayer',\r",
                    "                        docked:'top',\r",
                    "                        //                            width:250,\r",
                    "                        //                             height:40,\r",
                    "                        duration:attachments[i].audio.duration,\r",
                    "                        url  : attachments[i].audio.url,\r",
                    "                        title:attachments[i].audio.artist+', '+attachments[i].audio.title\r",
                    "                    })\r",
                    "\r",
                    "                    //                         {\r",
                    "                    //                             xtype:'component',\r",
                    "                    //                             docked:'top',\r",
                    "                    //                             html:attachments[i].audio.artist+', '+attachments[i].audio.title,\r",
                    "                    //                             style:{\"font-size\":\"0.8em\",\"font-weight\": \"light\",\"margin-bottom\":\"0.5em\"}\r",
                    "\r",
                    "                ]\r",
                    "            });\r",
                    "\r",
                    "        }\r",
                    "        if (attachments[i].type=='video')\r",
                    "        {\r",
                    "            var description=attachments[i].video.description;\r",
                    "            description=description.replace(/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi,\"<a href='$1' target='_blank' style='color:white!important'>$1</a>\");\r",
                    "            description=description.replace(/\\r\\n|\\r|\\n/g,\"<br />\");\r",
                    "            var id=attachments[i].video.owner_id+'_'+attachments[i].video.id\r",
                    "            var access_key=attachments[i].video.access_key;\r",
                    "            if (access_key)\r",
                    "            {\r",
                    "                id=id+'_'+access_key;\r",
                    "            }\r",
                    "            var date=new Date(attachments[i].video.date);\r",
                    "            var comments=attachments[i].video.comments;\r",
                    "            var views=attachments[i].video.views\r",
                    "            var videoContainer=body.add({\r",
                    "                xtype:'container',\r",
                    "                docked:'top',\r",
                    "                //margin:5,\r",
                    "                items:[\r",
                    "//                     {\r",
                    "//                         xtype:'component',\r",
                    "//                         docked:'top',\r",
                    "//                         html:'<div class=\"whiteVideoIconCls\">'+attachments[i].video.title+'</div>',\r",
                    "//                         style:{\"font-size\":\"0.8em\",\"font-weight\": \"light\",\"margin-bottom\":\"0.5em\"}\r",
                    "//                     },\r",
                    "//                     {\r",
                    "//                         html:'<a onclick=\" alert(\\''+ux.locale.Manager.get('labels.impossible')+'\\')\" type=\"video\"><img width=100% src='+attachments[i].video.photo_320+'></img></a>',\r",
                    "//                         width: 260,\r",
                    "//                         xtype: 'component',\r",
                    "//                         docked: 'top'\r",
                    "//                         //html:'<a type=\"video\" href=http://vk.com/video_ext.php?oid=63709057&id=164774633&hash=9a9aa1d37dc57f8d>fff</a>'\r",
                    "//                     }\r",
                    "                    //                         {\r",
                    "                    //                             xtype:'component',\r",
                    "                    //                             docked:'top',\r",
                    "                    //                             html:description,\r",
                    "                    //                             style:{\"font-size\":\"0.8em\",\"font-weight\": \"light\",\"margin-bottom\":\"0.5em\"}\r",
                    "                    //                         }\r",
                    "                ]\r",
                    "            });\r",
                    "            //if (!attachments[i].video.player)\r",
                    "            {\r",
                    "                var dataController=VKM.app.getController('DataLoader');\r",
                    "\r",
                    "                videoContainer.callback=function(request,resp)\r",
                    "                {\r",
                    "                   // console.log(arguments);\r",
                    "                    var response=resp.response;\r",
                    "                    if(response.count>0)\r",
                    "                    {                                                \r",
                    "                        \r",
                    "                        request.request.options.extraData.add({\r",
                    "                            width: 260,\r",
                    "                            xtype: 'component',\r",
                    "                            docked: 'top',\r",
                    "                           // html:'<a  href=\"'+response.items[0].player+'?html5=1\">'+response.items[0].title+'</a>'\r",
                    "                            html:'<img style=\"padding:10px\" t=\"video0\" class=\"'+response.items[0].player+'?html5=1\" width=100% src=\"'+response.items[0].photo_320+'\"></img>',\r",
                    "//                             '<video data-controls=\"true\" style=\"width:100%;\" data-theme=\"c\">'+\r",
                    "//                             '<source src=\"'+response.items[0].player+'?html5=1'+'\" type=\"video/mp4\" /></video>'\r",
                    "        \r",
                    "                        });\r",
                    "                                                                                               \r",
                    "//                         request.request.options.extraData.add({\r",
                    "//                             xtype: 'video',\r",
                    "//                             width    : 260,\r",
                    "//                             height   : 200,\r",
                    "//                             url: [\r",
                    "//                                 response.items[0].player+'?html5=1'\r",
                    "//                             ],\r",
                    "//                             loop: false,\r",
                    "//                             posterUrl: response.items[0].photo_320\r",
                    "//                         })\r",
                    "                                \r",
                    "                    }\r",
                    "                }\r",
                    "                    \r",
                    "                \r",
                    "                var url='https://api.vk.com/method/video.get';\r",
                    "                var params=\r",
                    "                    {\r",
                    "                        v:'5.3',\r",
                    "                        videos:id,\r",
                    "                        access_token:VKM.app.globals.authData['access_token'],\r",
                    "                        access_key:access_key\r",
                    "                    };\r",
                    "                dataController.go(url,params,videoContainer.callback,videoContainer);\r",
                    "            }\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "        //doc.title\r",
                    "        //doc.url\r",
                    "        //doc.ext\r",
                    "    }\r",
                    "};\r",
                    "if(record.fwd_messages)\r",
                    "{\r",
                    "    var fwdMessages=body.add(\r",
                    "        {\r",
                    "            xtype: 'container',\r",
                    "            layout: {\r",
                    "                align: 'start',\r",
                    "                type: 'vbox'\r",
                    "            },\r",
                    "            style: {'border-left':'3px dotted white',\"padding-left\":\"5px\",\"padding-top\":\"5px\"},\r",
                    "        }\r",
                    "    )\r",
                    "\r",
                    "    for (var i=0;i<record.fwd_messages.length;i++)\r",
                    "    {\r",
                    "        var message=record.fwd_messages[i];\r",
                    "        var mdate=new Date(message.date);\r",
                    "        var member=Ext.getStore('Users').getById(message['user_id']);\r",
                    "        fwdMessages.add(\r",
                    "            {\r",
                    "                xtype: 'container',\r",
                    "                cls: 'multiChat',\r",
                    "                style: {\r",
                    "                    \"margin-left\":\"5px\"\r",
                    "\r",
                    "                },\r",
                    "                layout: {\r",
                    "                    align: 'start',\r",
                    "                    type: 'vbox'\r",
                    "                },\r",
                    "                items: [\r",
                    "                    {\r",
                    "                        xtype: 'image',\r",
                    "                        docked: 'left',\r",
                    "                        itemId: 'avatar0',\r",
                    "                        margin: 2,\r",
                    "                        style: 'style=\"border-radius: 50% 50% 50% 50%\"',\r",
                    "                        width: 30,\r",
                    "                        cls:'blueBackground',\r",
                    "                        src:member.get('photo_50')\r",
                    "                    },\r",
                    "                    {\r",
                    "                        xtype: 'component',\r",
                    "                        cls: 'x-item-name',\r",
                    "                        html: member.get('first_name')+' '+member.get('last_name')\r",
                    "                    },\r",
                    "                    {\r",
                    "                        xtype: 'component',\r",
                    "                        cls: 'x-item-time',\r",
                    "                        html: moment(mdate).format('D MMMM d:mm')\r",
                    "                    }\r",
                    "                ]\r",
                    "            });\r",
                    "\r",
                    "        var messageBody=message.body;\r",
                    "        messageBody= messageBody.replace(/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi,\"<a href='$1' target='_blank' style='color:white!important'>$1</a>\");\r",
                    "        messageBody=VKM.app.smiles(messageBody);\r",
                    "        messageBody='<div>'+messageBody+'</div>';\r",
                    "\r",
                    "\r",
                    "        messageBody=messageBody.replace(/\\r\\n|\\r|\\n/g,\"<br />\");\r",
                    "        var text=fwdMessages.add({\r",
                    "            xtype: 'component',\r",
                    "            cls: 'x-item-body',\r",
                    "            style:{\"margin-bottom\":\"5px\"},\r",
                    "            html:messageBody\r",
                    "        })\r",
                    "\r",
                    "\r",
                    "        var newBody=fwdMessages.add({\r",
                    "            xtype: 'container',\r",
                    "            cls: 'x-item-body',\r",
                    "            style:{\"margin-bottom\":\"5px\"}\r",
                    "        })\r",
                    "        var params={\r",
                    "            message:message,\r",
                    "            body:newBody,\r",
                    "            component:component\r",
                    "        };\r",
                    "        component.renderMessage(params);\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "5b7697af-f4f1-43f2-a2a0-e4440a631221"
        },
        {
            "type": "Ext.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "cls": [
                    "blueBackground"
                ],
                "docked": null,
                "height": "100%",
                "itemId": "body",
                "margin": null,
                "padding": null,
                "scrollable": "vertical",
                "style": null,
                "width": "100%"
            },
            "configAlternates": {
                "style": "object"
            },
            "designerId": "fbb0e8b4-b9a8-43b5-bdb2-bb920a1a94f9"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onOneMessageInitialize",
                "implHandler": [
                    "\r",
                    "//if (tizen)\r",
                    "{\r",
                    "    component.element.dom.addEventListener('click',function(e){\r",
                    "        \r",
                    "        if (e.target.tagName == 'IMG') \r",
                    "        {\r",
                    "            if(e.target.className&&e.target.className.substr(0,4)=='http')\r",
                    "            {\r",
                    "                \r",
                    "                var appControl = new tizen.ApplicationControl(\"http://tizen.org/appcontrol/operation/view\", e.target.className);\r",
                    "                tizen.application.launchAppControl(appControl, null,\r",
                    "                                                   function() {\r",
                    "                                                       console.log(\"browser opened\");\r",
                    "                                                       \r",
                    "                                                   },\r",
                    "                                                   function(e) { console.log(\"browser error: \" + e.message); }\r",
                    "                                                  );\r",
                    "                \r",
                    "                \r",
                    "                //                 var iframeUrl='<iframe height=100% width=100% src=\"'+e.target.className+'\"></iframe>';                \r",
                    "                //                 var newPanel= Ext.Viewport.add({\r",
                    "                //                     xtype:\"panel\",\r",
                    "                //                     height:\"100%\",\r",
                    "                //                     width:\"100%\",\r",
                    "                //                     modal:true,\r",
                    "                //                     itemId    :  \"tmpPanel\",\r",
                    "                //                     cls:\"googleViewer\",\r",
                    "                //                     centered:true,\r",
                    "                //                     style:{height:\"100%\"},\r",
                    "                //                     html:  iframeUrl,\r",
                    "                //                     items:[{\r",
                    "                //                         xtype:'button',\r",
                    "                //                         itemId:\"closeButton\",\r",
                    "                //                         ui:\"decline\",\r",
                    "                //                         iconCls:'delete',\r",
                    "                //                         handler:VKM.app.closeTmpPanels,\r",
                    "                //                         style:{\r",
                    "                //                             position:\"absolute\",\r",
                    "                //                             top:2,\r",
                    "                //                             left:2,\r",
                    "                //                             zIndex:99999\r",
                    "                //                         }\r",
                    "                //                     }\r",
                    "                //                           ]\r",
                    "                //                 });\r",
                    "                //                 newPanel.show();\r",
                    "                \r",
                    "            }\r",
                    "        }\r",
                    "        else\r",
                    "            \r",
                    "            if (e.target.tagName == 'A') {\r",
                    "                console.log(e.target.type);\r",
                    "                e.preventDefault();\r",
                    "                \r",
                    "                \r",
                    "                \r",
                    "                \r",
                    "                if (e.target.type==\"video\")\r",
                    "                {\r",
                    "                    var appControl = new tizen.ApplicationControl(\"http://tizen.org/appcontrol/operation/view\", e.target.href,\"video/mp4\", null);\r",
                    "                    tizen.application.launchAppControl(\r",
                    "                        appControl,\r",
                    "                        \"tizen.videoplayer\",\r",
                    "                        function() {console.log(\"launch application control succeed\"); },\r",
                    "                        function(e) {console.log(\"launch application control failed. reason: \" + e.message); },\r",
                    "                        null );\r",
                    "                    function onsuccess() {\r",
                    "                        console.log(\"The application has launched successfully\");\r",
                    "                    }\r",
                    "                }\r",
                    "                if (e.target.type==\"doc\")\r",
                    "                {\r",
                    "                    var appControl = new tizen.ApplicationControl(\"http://tizen.org/appcontrol/operation/view\", e.target.href,null, null);\r",
                    "                    tizen.application.launchAppControl(\r",
                    "                        appControl,\r",
                    "                        null,\r",
                    "                        function() {console.log(\"launch application control succeed\"); },\r",
                    "                        function(e) {console.log(\"launch application control failed. reason: \" + e.message); },\r",
                    "                        null );\r",
                    "                    function onsuccess() {\r",
                    "                        console.log(\"The application has launched successfully\");\r",
                    "                    }\r",
                    "                }\r",
                    "                else\r",
                    "                {\r",
                    "                    var appControl = new tizen.ApplicationControl(\"http://tizen.org/appcontrol/operation/view\", e.target.href);\r",
                    "                    tizen.application.launchAppControl(appControl, null,\r",
                    "                                                       function() {\r",
                    "                                                           console.log(\"browser opened\");\r",
                    "                                                           \r",
                    "                                                       },\r",
                    "                                                       function(e) { console.log(\"browser error: \" + e.message); }\r",
                    "                                                      );\r",
                    "                    \r",
                    "                    \r",
                    "                }\r",
                    "                return;\r",
                    "            };\r",
                    "        \r",
                    "    }, false);\r",
                    "}"
                ],
                "name": "initialize"
            },
            "designerId": "5fe4f83e-50d1-4cdc-a506-291fcf676191"
        }
    ]
}