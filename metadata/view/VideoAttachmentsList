{
    "type": "Ext.dataview.component.DataItem",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "charMessage": null,
        "container|align": "start",
        "container|pack": "end",
        "designer|userAlias": "videoattachmentslist",
        "designer|userClassName": "VideoAttachmentsList",
        "height": null,
        "itemCls": "x-list-item",
        "layout": "hbox",
        "maxWidth": null,
        "padding": "5 10 10 10"
    },
    "designerId": "0a292ecb-8e8d-46c9-b608-88365bb92595",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "charMessage",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "record"
                ],
                "fn": "updateRecord",
                "implHandler": [
                    "if (record)\r",
                    "{\r",
                    "    var body=this.down('#body');\r",
                    "    this.down('#body').removeAll(true,true);\r",
                    "    if (record.get('chat_id')&&(record.get('out')!='1'))\r",
                    "    {\r",
                    "        this.down('#avatarContainer').setHidden(false);\r",
                    "        this.down('#avatar0').setHidden(false);\r",
                    "        var member=Ext.getStore('Users').getById(record.get('from_id'));\r",
                    "        this.down('#avatar0').setSrc(member.get('photo_50'));\r",
                    "\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        this.down('#avatarContainer').setHidden(true);\r",
                    "        this.down('#avatar0').setHidden(true);\r",
                    "    }\r",
                    "\r",
                    "    //console.log(record);\r",
                    "    //this.down('#name').setHtml(Ext.String.ellipsis(user.get('first_name')+' '+user.get('last_name'),23));\r",
                    "    var date=new Date(record.get('date')*1000);\r",
                    "    var currentDate=new Date(Ext.DateExtras.now());\r",
                    "    var messageDate=date;\r",
                    "    var messageBody=record.get('body');\r",
                    "    var messageTime=moment(date).format('d:mm');\r",
                    "    var messageDate=moment(date).format('D MMMM');\r",
                    "    var store=Ext.getStore('Chat')\r",
                    "    if (store.previousDate)\r",
                    "    {\r",
                    "        if (messageDate!=Ext.getStore('Chat').previousDate)\r",
                    "        {\r",
                    "            this.down('#messageDate').setHidden(false);\r",
                    "            this.down('#messageDate').setHtml(messageDate);\r",
                    "            store.previousDate=messageDate;\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            this.down('#messageDate').setHidden(true);\r",
                    "        }\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        this.down('#messageDate').setHidden(false);\r",
                    "        this.down('#messageDate').setHtml(messageDate);\r",
                    "        store.previousDate=messageDate;\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    messageBody= messageBody.replace(/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi,\"<a href='$1' target='_blank' style='color:white!important'>$1</a>\");\r",
                    "    if(record.get('emoji'))\r",
                    "    {\r",
                    "        messageBody=VKM.app.smiles(messageBody);\r",
                    "        messageBody='<div>'+messageBody+'</div>';\r",
                    "\r",
                    "    }\r",
                    "    messageBody=messageBody.replace(/\\r\\n|\\r|\\n/g,\"<br />\");\r",
                    "\r",
                    "\r",
                    "    //console.log(record.getData());\r",
                    "    if (record.get('out')==1)\r",
                    "    {\r",
                    "        this.down('#left').setHidden(true);\r",
                    "        this.down('#right').setHidden(false);\r",
                    "\r",
                    "        this.down('#timeright').setHidden(true);\r",
                    "        this.down('#timeleft').setHidden(false);\r",
                    "        this.down('#timeleft').setHtml(messageTime);\r",
                    "\r",
                    "\r",
                    "        //this.down('#datetime').setHtml(moment(messageDate).fromNow());\r",
                    "        body.removeCls('triangle-right left');\r",
                    "        body.addCls('triangle-right right');\r",
                    "        body.add({\r",
                    "            xtype: 'component',\r",
                    "            docked:'top',\r",
                    "            cls: 'x-item-message',\r",
                    "            html:messageBody\r",
                    "        })\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        this.down('#right').setHidden(true);\r",
                    "        this.down('#left').setHidden(false);\r",
                    "        this.down('#timeleft').setHidden(true);\r",
                    "        this.down('#timeright').setHidden(false);\r",
                    "        this.down('#timeright').setHtml(messageTime);\r",
                    "\r",
                    "        body.removeCls('triangle-right right');\r",
                    "        body.addCls('triangle-right left');\r",
                    "        body.add({\r",
                    "            xtype: 'component',\r",
                    "            docked:'top',\r",
                    "            cls: 'x-item-message',\r",
                    "            html:messageBody\r",
                    "        })\r",
                    "    }    ;\r",
                    "\r",
                    "    var params=\r",
                    "        {\r",
                    "            message:record.getData(),\r",
                    "            body:body,\r",
                    "            component:this\r",
                    "        };\r",
                    "    this.renderMessage(params);\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "1173216f-7ff8-48f2-ac72-e884065ccef8"
        },
        {
            "type": "Ext.Spacer",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "hidden": true,
                "itemId": "right"
            },
            "designerId": "65c9f40d-0bc2-4273-864e-d2af518aee61"
        },
        {
            "type": "Ext.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "hidden": null,
                "itemId": "body",
                "layout": "hbox",
                "margin": null,
                "maxWidth": 275
            },
            "designerId": "fb0f65e6-4c8b-48bd-9be9-8f2a774c08c8"
        },
        {
            "type": "Ext.Spacer",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "itemId": "left"
            },
            "designerId": "6cc965bf-4375-4385-a60d-d6251377d25b"
        },
        {
            "type": "Ext.field.Checkbox",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "docked": "left",
                "hidden": null,
                "inputCls": "narrowCheckBox ",
                "itemId": "isSelected",
                "label": null,
                "minWidth": null,
                "width": null
            },
            "designerId": "fa37a45c-5cd1-4a2a-b0a4-98a15cb27260",
            "cn": [
                {
                    "type": "basiceventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onIsSelectedChange",
                        "implHandler": [
                            ""
                        ],
                        "name": "change"
                    },
                    "designerId": "b692d8a1-84bd-49aa-be52-aec333d66e8f"
                }
            ]
        },
        {
            "type": "Ext.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "hidden": true,
                "layout": "hbox",
                "margin": 0
            },
            "designerId": "51c0cb9d-37c7-4909-a7c8-ec24c7503764",
            "cn": [
                {
                    "type": "Ext.Component",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "cls": [
                            "name"
                        ],
                        "html": "Sample component inside dataitem",
                        "itemId": "name",
                        "layout|flex": 1
                    },
                    "designerId": "b426e222-4f40-4947-b4b7-a808fc3df6ff"
                }
            ]
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "params"
                ],
                "fn": "renderMessage",
                "implHandler": [
                    "var record=params.message;\r",
                    "var body=params.body;\r",
                    "var component=params.component;\r",
                    "if(record.geo)\r",
                    "{\r",
                    "    var latitude=record.geo.coordinates.split(' ')[0];\r",
                    "    var longitude=record.geo.coordinates.split(' ')[1];\r",
                    "\r",
                    "    var position = new google.maps.LatLng(latitude,longitude)\r",
                    "\r",
                    "    var image = new google.maps.MarkerImage(\r",
                    "        'resources/images/point.png',\r",
                    "        new google.maps.Size(32, 31),\r",
                    "        new google.maps.Point(0, 0),\r",
                    "        new google.maps.Point(16, 31)\r",
                    "    )\r",
                    "\r",
                    "    var shadow = new google.maps.MarkerImage(\r",
                    "        'resources/images/shadow.png',\r",
                    "        new google.maps.Size(64, 52),\r",
                    "        new google.maps.Point(0, 0),\r",
                    "        new google.maps.Point(-5, 42)\r",
                    "    )\r",
                    "\r",
                    "\r",
                    "    body.add({\r",
                    "        xtype: 'map',\r",
                    "        position:position,\r",
                    "        title:record.geo.place.title,\r",
                    "        docked: 'top',\r",
                    "        height: 200,\r",
                    "        width: 260,\r",
                    "        margin: 2,\r",
                    "        mapOptions:{\r",
                    "            zoom: 15,\r",
                    "            center : position,\r",
                    "            zoomControl: true,\r",
                    "            scaleControl: true,\r",
                    "        },\r",
                    "        listeners: {\r",
                    "            maprender: function(comp, map) {\r",
                    "\r",
                    "                var marker = new google.maps.Marker({\r",
                    "                    position: comp.config.position,\r",
                    "                    title : comp.config.title,\r",
                    "                    map: map\r",
                    "                });\r",
                    "                var infowindow = new google.maps.InfoWindow({\r",
                    "                    content: '<div id=\"content\">'+comp.config.title+'<div id=\"content\">'\r",
                    "                });\r",
                    "\r",
                    "                google.maps.event.addListener(marker, 'click', function() {\r",
                    "                    infowindow.open(map, marker);\r",
                    "                });\r",
                    "            }\r",
                    "\r",
                    "        }\r",
                    "    });\r",
                    "\r",
                    "}\r",
                    "\r",
                    "if(record.attachments)\r",
                    "{\r",
                    "    var attachments=record.attachments\r",
                    "    for (var i=0;i<attachments.length;i++)\r",
                    "    {\r",
                    "        if (attachments[i].type=='photo')\r",
                    "        {\r",
                    "            var description=attachments[i].photo.text;\r",
                    "            description=description.replace(/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi,\"<a href='$1' target='_blank' style='color:white!important'>$1</a>\");\r",
                    "            description=description.replace(/\\r\\n|\\r|\\n/g,\"<br />\");\r",
                    "\r",
                    "            body.add({\r",
                    "                xtype: 'component',\r",
                    "                docked: 'top',\r",
                    "                html:'<img width=100% src='+attachments[i].photo.photo_604+'></img>',\r",
                    "                width: 260\r",
                    "                //margin: 2\r",
                    "            });\r",
                    "            //                 this.down('#body').add({\r",
                    "            //                     xtype: 'component',\r",
                    "            //                     docked: 'top',\r",
                    "            //                     html:description,\r",
                    "            //                     style:{\"font-size\":\"0.8em\",\"font-weight\": \"light\"},\r",
                    "            //                     margin: 2\r",
                    "            //                 });\r",
                    "            //            console.log(record.getData());\r",
                    "        }\r",
                    "        if (attachments[i].type=='doc')\r",
                    "        {\r",
                    "            body.add({\r",
                    "                xtype: 'component',\r",
                    "                docked: 'top',\r",
                    "                html:'<span class=\"whiteDocumentIconCls\"></span><a href='+attachments[i].doc.url+' style=\"color:white!important;font-size:0.8em;font-weight:light\">'+attachments[i].doc.title+'</a>',\r",
                    "                margin: 2\r",
                    "            });\r",
                    "            //            console.log(record.getData());\r",
                    "        }\r",
                    "        if (attachments[i].type=='audio')\r",
                    "        {\r",
                    "\r",
                    "            body.add({\r",
                    "                xtype:'container',\r",
                    "                width:260,\r",
                    "                docked:'bottom',\r",
                    "                //margin:5,\r",
                    "                items:[\r",
                    "\r",
                    "                    Ext.create('ux.AudioPlayer',{\r",
                    "                        xtype: 'audioplayer',\r",
                    "                        docked:'top',\r",
                    "                        //                            width:250,\r",
                    "                        //                             height:40,\r",
                    "                        duration:attachments[i].audio.duration,\r",
                    "                        url  : attachments[i].audio.url,\r",
                    "                        title:attachments[i].audio.artist+', '+attachments[i].audio.title\r",
                    "                    })\r",
                    "\r",
                    "                    //                         {\r",
                    "                    //                             xtype:'component',\r",
                    "                    //                             docked:'top',\r",
                    "                    //                             html:attachments[i].audio.artist+', '+attachments[i].audio.title,\r",
                    "                    //                             style:{\"font-size\":\"0.8em\",\"font-weight\": \"light\",\"margin-bottom\":\"0.5em\"}\r",
                    "\r",
                    "                ]\r",
                    "            });\r",
                    "\r",
                    "        }\r",
                    "        if (attachments[i].type=='video')\r",
                    "        {\r",
                    "            var description=attachments[i].video.description;\r",
                    "            description=description.replace(/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi,\"<a href='$1' target='_blank' style='color:white!important'>$1</a>\");\r",
                    "            description=description.replace(/\\r\\n|\\r|\\n/g,\"<br />\");\r",
                    "            var id=attachments[i].video.owner_id+'_'+attachments[i].video.id\r",
                    "            var access_key=attachments[i].video.access_key;\r",
                    "            if (access_key)\r",
                    "            {\r",
                    "                id=id+'_'+access_key;\r",
                    "            }\r",
                    "            var date=new Date(attachments[i].video.date);\r",
                    "            var comments=attachments[i].video.comments;\r",
                    "            var views=attachments[i].video.views\r",
                    "            var videoContainer=body.add({\r",
                    "                xtype:'container',\r",
                    "                docked:'bottom',\r",
                    "                //margin:5,\r",
                    "                items:[\r",
                    "                    {\r",
                    "                        xtype:'component',\r",
                    "                        docked:'top',\r",
                    "                        html:'<div class=\"whiteVideoIconCls\">'+attachments[i].video.title+'</div>',\r",
                    "                        style:{\"font-size\":\"0.8em\",\"font-weight\": \"light\",\"margin-bottom\":\"0.5em\"}\r",
                    "                    },\r",
                    "                    {\r",
                    "                        html:'<a type=\"video\"><img width=100% src='+attachments[i].video.photo_320+'></img></a>',\r",
                    "                        width: 260,\r",
                    "                        xtype: 'component',\r",
                    "                        docked: 'top'\r",
                    "                        //html:'<a type=\"video\" href=http://vk.com/video_ext.php?oid=63709057&id=164774633&hash=9a9aa1d37dc57f8d>fff</a>'\r",
                    "                    }\r",
                    "                    //                         {\r",
                    "                    //                             xtype:'component',\r",
                    "                    //                             docked:'top',\r",
                    "                    //                             html:description,\r",
                    "                    //                             style:{\"font-size\":\"0.8em\",\"font-weight\": \"light\",\"margin-bottom\":\"0.5em\"}\r",
                    "                    //                         }\r",
                    "                ]\r",
                    "            });\r",
                    "            if (!attachments[i].video.player)\r",
                    "            {\r",
                    "                var dataController=VKM.app.getController('DataLoader');\r",
                    "\r",
                    "                videoContainer.callback=function(response,messages)\r",
                    "                {\r",
                    "\r",
                    "\r",
                    "\r",
                    "                };\r",
                    "                var url='https://api.vk.com/method/video.get';\r",
                    "                var params=\r",
                    "                    {\r",
                    "                        v:'5.3',\r",
                    "                        videos:id,\r",
                    "                        access_token:VKM.app.globals.authData['access_token'],\r",
                    "                        access_key:access_key\r",
                    "                    };\r",
                    "                dataController.go(url,params,videoContainer.callback);\r",
                    "            }\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "        //doc.title\r",
                    "        //doc.url\r",
                    "        //doc.ext\r",
                    "    }\r",
                    "};\r",
                    "if(record.fwd_messages)\r",
                    "{\r",
                    "    var fwdMessages=body.add(\r",
                    "        {\r",
                    "            xtype: 'container',\r",
                    "            layout: {\r",
                    "                align: 'start',\r",
                    "                type: 'vbox'\r",
                    "            },\r",
                    "            style: {'border-left':'3px dotted white',\"padding-left\":\"5px\",\"padding-top\":\"5px\"},\r",
                    "        }\r",
                    "    )\r",
                    "\r",
                    "    for (var i=0;i<record.fwd_messages.length;i++)\r",
                    "    {\r",
                    "        var message=record.fwd_messages[i];\r",
                    "        console.log(message);\r",
                    "        var mdate=new Date(message.date);\r",
                    "        var member=Ext.getStore('Users').getById(message['user_id']);\r",
                    "        fwdMessages.add(\r",
                    "            {\r",
                    "                xtype: 'container',\r",
                    "                cls: 'multiChat',\r",
                    "                style: {\r",
                    "                    \"margin-left\":\"5px\"\r",
                    "                },\r",
                    "                layout: {\r",
                    "                    align: 'start',\r",
                    "                    type: 'vbox'\r",
                    "                },\r",
                    "                items: [\r",
                    "                    {\r",
                    "                        xtype: 'image',\r",
                    "                        docked: 'left',\r",
                    "                        itemId: 'avatar0',\r",
                    "                        margin: 2,\r",
                    "                        style: 'style=\"border-radius: 50% 50% 50% 50%\"',\r",
                    "                        width: 30,\r",
                    "                        src:member.get('photo_50')\r",
                    "                    },\r",
                    "                    {\r",
                    "                        xtype: 'component',\r",
                    "                        cls: 'x-item-name',\r",
                    "                        html: member.get('first_name')+' '+member.get('last_name')\r",
                    "                    },\r",
                    "                    {\r",
                    "                        xtype: 'component',\r",
                    "                        cls: 'x-item-time',\r",
                    "                        html: moment(mdate).format('D MMMM d:mm')\r",
                    "                    }\r",
                    "                ]\r",
                    "            });\r",
                    "\r",
                    "        var messageBody=message.body;\r",
                    "        messageBody= messageBody.replace(/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gi,\"<a href='$1' target='_blank' style='color:white!important'>$1</a>\");\r",
                    "        messageBody=VKM.app.smiles(messageBody);\r",
                    "        messageBody='<div>'+messageBody+'</div>';\r",
                    "\r",
                    "\r",
                    "        messageBody=messageBody.replace(/\\r\\n|\\r|\\n/g,\"<br />\");\r",
                    "        var text=fwdMessages.add({\r",
                    "            xtype: 'component',\r",
                    "            cls: 'x-item-body',\r",
                    "            style:{\"margin-bottom\":\"5px\"},\r",
                    "            html:messageBody\r",
                    "        })\r",
                    "\r",
                    "\r",
                    "        var newBody=fwdMessages.add({\r",
                    "            xtype: 'container',\r",
                    "            cls: 'x-item-body',\r",
                    "            style:{\"margin-bottom\":\"5px\"}\r",
                    "        })\r",
                    "        var params={\r",
                    "            message:message,\r",
                    "            body:newBody,\r",
                    "            component:component\r",
                    "        };\r",
                    "        component.renderMessage(params);\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "f3eaa03c-8a42-4f12-a37f-d746bc35b526"
        }
    ]
}