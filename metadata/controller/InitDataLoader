{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "InitDataLoader"
    },
    "designerId": "c72ce74a-cf1b-42b6-81b2-683885c5c6bc",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadDialogs",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "0642b50f-54ac-4f7b-84b4-c38f3c8bd8ca"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initLongPolling",
                "implHandler": [
                    "var url='https://api.vk.com/method/messages.getLongPollServer?v=5.3&access_token='+\r",
                    "    VKM.app.globals.authData['access_token'];\r",
                    "var controller=this;\r",
                    "Ext.Ajax.request({\r",
                    "    url: url,\r",
                    "    method: 'GET',\r",
                    "    disableCaching: true,\r",
                    "    success: function(response) {\r",
                    "        var jsonRespoinse=JSON.parse(response.responseText);\r",
                    "        VKM.app.globals.pollingConnectionData=jsonRespoinse.response;\r",
                    "        if(VKM.app.globals.pollingConnectionData)\r",
                    "        {\r",
                    "            controller.connectLongPolling();\r",
                    "        }\r",
                    "    },\r",
                    "    fail:\r",
                    "    function(response) {\r",
                    "        console.log('fail');\r",
                    "        console.log(response);\r",
                    "    }\r",
                    "});"
                ]
            },
            "designerId": "5fb03764-129d-4a03-bc7e-939b84070fdf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "connectLongPolling",
                "implHandler": [
                    "if(!VKM.app.globals.doNotReconnect&&VKM.app.globals.pollingConnectionData&&VKM.app.globals.pollingConnectionData.server)\r",
                    "{\r",
                    "    var server=VKM.app.globals.pollingConnectionData.server;\r",
                    "    var key=VKM.app.globals.pollingConnectionData.key;\r",
                    "    var ts=VKM.app.globals.pollingConnectionData.ts;\r",
                    "    var url='http://'+server+'?act=a_check&key='+key+'&ts='+ts+'&wait=25&mode=2'\r",
                    "    var controller=this;\r",
                    "    VKM.app.globals.lastTime=Ext.DateExtras.now();\r",
                    "    Ext.Ajax.request({\r",
                    "        url: url,\r",
                    "        method: 'GET',\r",
                    "        disableCaching: true,\r",
                    "        success: function(response)\r",
                    "        {\r",
                    "            console.log(VKM.app.globals.lastTime);\r",
                    "            var jsonResponse=JSON.parse(response.responseText);\r",
                    "            VKM.app.globals.pollingConnectionData.ts=jsonResponse.ts;\r",
                    "            if (jsonResponse.failed&&!VKM.app.globals.doNotReconnect)\r",
                    "            {\r",
                    "                VKM.app.getController('InitDataLoader').initLongPolling();\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "                if(!jsonResponse.updates)\r",
                    "                {\r",
                    "                    console.log(response.responseText);\r",
                    "                }\r",
                    "                else\r",
                    "                {\r",
                    "\r",
                    "                    setTimeout(function(){\r",
                    "                        controller.processUpdates(jsonResponse.updates)\r",
                    "                    },100);\r",
                    "\r",
                    "                }\r",
                    "                if(!VKM.app.globals.doNotReconnect)\r",
                    "                {\r",
                    "                    controller.connectLongPolling()\r",
                    "                };\r",
                    "            }\r",
                    "        },\r",
                    "        fail:function(response)\r",
                    "        {\r",
                    "            console.log(\"failConnect\");\r",
                    "            console.log(response);\r",
                    "            controller.initLongPolling()\r",
                    "        }\r",
                    "    });\r",
                    "\r",
                    "\r",
                    "}"
                ]
            },
            "designerId": "3fcc974d-fbb6-4037-b184-0ddaff971797"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "id",
                    "callback"
                ],
                "fn": "getRecord",
                "implHandler": [
                    ""
                ]
            },
            "designerId": "7fd585b9-fbd0-474e-9d48-9d7188d1e1e7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadDocsStep1",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token']\r",
                    "    };\r",
                    "var store=Ext.getStore('Docs');\r",
                    "store.getProxy().setExtraParams(params);\r",
                    "if(store.getCount()==0)\r",
                    "{\r",
                    "    store.load();\r",
                    "}\r",
                    "\r",
                    "//})"
                ]
            },
            "designerId": "7af51e1c-b01f-4c82-aba7-354d922a9b5a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "response",
                    "messages"
                ],
                "fn": "loadDocsStep2",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var settingsStore=Ext.getStore('settings');\r",
                    "var messagesStore=Ext.getStore('Docs');\r",
                    "messagesStore.removeAll();\r",
                    "if(messages.response&&messages.response['items'])\r",
                    "{\r",
                    "    for (var i=0;i<messages.response['items'].length;i++)\r",
                    "    {\r",
                    "        //var newRecord=new VKM.model.Albums(messages.response['items'][i]);\r",
                    "        messagesStore.add(messages.response['items'][i]);\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "b132db5b-fb36-4109-bb6d-3fcea0cf48ec"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "deleteMessages",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var url='https://api.vk.com/method/docs.get';\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token']\r",
                    "    };\r",
                    "\r",
                    "dataController.go(url,params,controller.loadDocsStep2);\r",
                    "\r",
                    "\r",
                    "//})"
                ]
            },
            "designerId": "2ebb7449-9785-4306-ad0c-5e2f1bc8b697"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadAudioStep1",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var url='https://api.vk.com/method/audio.get';\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token']\r",
                    "    };\r",
                    "var store=Ext.getStore('Audios');\r",
                    "store.getProxy().setExtraParams(params);\r",
                    "if(store.getCount()==0)\r",
                    "{\r",
                    "    store.load();\r",
                    "}"
                ]
            },
            "designerId": "4ad2dadb-06de-4546-9dba-efa8fdae1adf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "response",
                    "messages"
                ],
                "fn": "loadAudioStep2",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var settingsStore=Ext.getStore('settings');\r",
                    "var messagesStore=Ext.getStore('Audios');\r",
                    "messagesStore.removeAll();\r",
                    "if(messages.response&&messages.response['items'])\r",
                    "{\r",
                    "    for (var i=0;i<messages.response['items'].length;i++)\r",
                    "    {\r",
                    "        //var newRecord=new VKM.model.Albums(messages.response['items'][i]);\r",
                    "        messagesStore.add(messages.response['items'][i]);\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    "console.log(messagesStore);"
                ]
            },
            "designerId": "2b5cae5a-8d46-4aa1-af65-1b57dd6618d8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadVideosStep1",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var url='https://api.vk.com/method/video.get';\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token']        \r",
                    "    };\r",
                    "\r",
                    "console.log('3');\r",
                    "dataController.go(url,params,controller.loadVideosStep2);\r",
                    "\r",
                    "\r",
                    "//})"
                ]
            },
            "designerId": "116ee011-70b8-4b2e-beab-9a5ae5e0bf0d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "response",
                    "messages"
                ],
                "fn": "loadVideosStep2",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var settingsStore=Ext.getStore('settings');\r",
                    "var messagesStore=Ext.getStore('Videos');\r",
                    "messagesStore.removeAll();\r",
                    "if(messages.response&&messages.response['items'])\r",
                    "{    \r",
                    "    for (var i=0;i<messages.response['items'].length;i++)\r",
                    "    {        \r",
                    "        //var newRecord=new VKM.model.Albums(messages.response['items'][i]);\r",
                    "        messagesStore.add(messages.response['items'][i]);\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    "console.log(messagesStore);"
                ]
            },
            "designerId": "f1400d4d-e5a9-45d5-904b-636c51d9acfd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadAlbumsStep1",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var url='https://api.vk.com/method/photos.getAlbums';\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token'],\r",
                    "        need_covers:1,\r",
                    "        need_system:1\r",
                    "    };\r",
                    "\r",
                    "dataController.go(url,params,controller.loadAlbumsStep2);\r",
                    "\r",
                    "\r",
                    "//})"
                ]
            },
            "designerId": "8afd51cf-5026-44aa-8fd6-98c60ec7f4c7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "response",
                    "messages"
                ],
                "fn": "loadAlbumsStep2",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var settingsStore=Ext.getStore('settings');\r",
                    "var messagesStore=Ext.getStore('Albums');\r",
                    "messagesStore.removeAll();\r",
                    "\r",
                    "if(messages.response&&messages.response['items'])\r",
                    "{\r",
                    "    for (var i=0;i<messages.response['items'].length;i++)\r",
                    "    {\r",
                    "        //var newRecord=new VKM.model.Albums(messages.response['items'][i]);\r",
                    "        messagesStore.add(messages.response['items'][i]);\r",
                    "\r",
                    "    }\r",
                    "}"
                ]
            },
            "designerId": "e8d7881f-7ce1-42b7-b08f-4c612ab16295"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "aid,parentController"
                ],
                "fn": "loadPhotosStep1",
                "implHandler": [
                    "var store=Ext.getStore('Images');\r",
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var url='https://api.vk.com/method/photos.get';\r",
                    "\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token'],\r",
                    "        album_id:aid,\r",
                    "        photo_sizes:1\r",
                    "    };\r",
                    "store.getProxy().setUrl(url);\r",
                    "store.getProxy().setExtraParams(params);\r",
                    "store.removeAll();\r",
                    "store.load({callback:function(){}});\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "//})"
                ]
            },
            "designerId": "e5a44815-01b6-4cdd-a239-2dbff64e4efe"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "response",
                    "messages"
                ],
                "fn": "loadPhotosStep2",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var settingsStore=Ext.getStore('settings');\r",
                    "var messagesStore=Ext.getStore('Images');\r",
                    "messagesStore.removeAll();\r",
                    "\r",
                    "if(messages.response&&messages.response['items'])\r",
                    "{\r",
                    "    for (var i=0;i<messages.response['items'].length;i++)\r",
                    "    {\r",
                    "        //var newRecord=new VKM.model.Albums(messages.response['items'][i]);\r",
                    "        messagesStore.add(messages.response['items'][i]);\r",
                    "\r",
                    "    }\r",
                    "};\r",
                    "var controller=VKM.app.getController('Dialogues');\r",
                    "var store = Ext.getStore('Images');\r",
                    "\r",
                    "controller.overlay.gallery.renderImages(store);"
                ]
            },
            "designerId": "42460aea-3690-48e9-abe7-e2fcb2ed6afd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "offset",
                    "skipInitOthers",
                    "count"
                ],
                "fn": "loadInbox",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var url='https://api.vk.com/method/execute.messages';\r",
                    "\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token'],        \r",
                    "        rev:0\r",
                    "    };\r",
                    "var store=Ext.getStore('InboxMessages');\r",
                    "\r",
                    "store.getProxy().setUrl(url);\r",
                    "store.getProxy().setExtraParams(params);\r",
                    "store.getProxy().setReader(\r",
                    "    Ext.create(\"ux.Dialogues\",\r",
                    "               {\r",
                    "                   rootProperty: 'response.messages.items',\r",
                    "                   totalProperty: 'response.messages.count'\r",
                    "               }\r",
                    "              )\r",
                    ")\r",
                    "store.load();\r",
                    "\r",
                    "//})"
                ]
            },
            "designerId": "5175827d-09e6-44d3-adf5-6b96eba0516e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "offset",
                    "skipInitOthers",
                    "count"
                ],
                "fn": "loadSent",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var url='https://api.vk.com/method/execute.messages';\r",
                    "\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token'],\r",
                    "        //offset:offsetParam,\r",
                    "        rev:0,\r",
                    "        out:1\r",
                    "    };\r",
                    "var store=Ext.getStore('SentMessages');\r",
                    "\r",
                    "store.getProxy().setUrl(url);\r",
                    "store.getProxy().setExtraParams(params);\r",
                    "store.getProxy().setReader(\r",
                    "    Ext.create(\"ux.Dialogues\",\r",
                    "               {\r",
                    "                   rootProperty: 'response.messages.items',\r",
                    "                   totalProperty: 'response.messages.count'\r",
                    "               }\r",
                    "              )\r",
                    ")\r",
                    "store.load();\r",
                    "\r",
                    "//})"
                ]
            },
            "designerId": "919dd269-b47b-4e79-ba39-f6834616858f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "initPolling"
                ],
                "fn": "loadMessagesStep1",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var url='https://api.vk.com/method/execute.dialogues';\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token'],\r",
                    "        user_id:VKM.app.globals.authData.user_id,\r",
                    "        rev:0\r",
                    "    };\r",
                    "var store=Ext.getStore('AllMessages');\r",
                    "\r",
                    "store.getProxy().setUrl(url);\r",
                    "store.getProxy().setExtraParams(params);\r",
                    "store.getProxy().setReader(\r",
                    "    Ext.create(\"ux.Dialogues\",\r",
                    "               {\r",
                    "                   dialogue:true,\r",
                    "                   rootProperty: 'response.messages.items',\r",
                    "                   totalProperty: 'response.messages.count'\r",
                    "               }\r",
                    "              )\r",
                    ")\r",
                    "var dialoguesList=controller.getDialoguesList();\r",
                    "dialoguesList.setLoadingText(ux.locale.Manager.get('labels.Loading'));\r",
                    "if (!initPolling)\r",
                    "{\r",
                    "    dialoguesList.setLoadingText(false);\r",
                    "}\r",
                    "\r",
                    "store.load({callback:function(){\r",
                    "    if(initPolling)\r",
                    "    {\r",
                    "        console.log(Ext.getStore('Users'))\r",
                    "        dialoguesList.setLoadingText(ux.locale.Manager.get('labels.Loading'));\r",
                    "        controller.initLongPolling();\r",
                    "    }\r",
                    "}});\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "22a775d8-1c52-47e5-aa45-3929bb21bf44"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "userId",
                    "chatId",
                    "offset",
                    "count"
                ],
                "fn": "loadChatMessagesStep1",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var url='https://api.vk.com/method/messages.getHistory';\r",
                    "// var offsetParam=0;\r",
                    "// var skipInitOthersParam=0\r",
                    "// if (!count)\r",
                    "// {\r",
                    "//     count=20;\r",
                    "// };\r",
                    "// if(offset)\r",
                    "// {\r",
                    "//     offsetParam=parseInt(offset);\r",
                    "// };\r",
                    "\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token'],\r",
                    "//         count:count,\r",
                    "//         offset:offsetParam,\r",
                    "        rev:0\r",
                    "    };\r",
                    "\r",
                    "if (userId)\r",
                    "{\r",
                    "    params.user_id=userId;\r",
                    "}\r",
                    "if (chatId)\r",
                    "{\r",
                    "    //console.log(chatId);\r",
                    "    params.user_id=parseInt(chatId)+2000000000;\r",
                    "}\r",
                    "\r",
                    "// dataController.go(url,params,controller.loadChatMessagesStep2);\r",
                    "\r",
                    "var store=Ext.getStore('Chat');\r",
                    "\r",
                    "store.getProxy().setUrl(url);\r",
                    "store.getProxy().setExtraParams(params);\r",
                    "// store.getProxy().setReader(\r",
                    "//     Ext.create(\"ux.Dialogues\",\r",
                    "//                {\r",
                    "//                    rootProperty: 'response.messages.items',\r",
                    "//                    totalProperty: 'response.messages.count'\r",
                    "//                }\r",
                    "//               )\r",
                    "// )\r",
                    "var chatList=controller.getChatList();\r",
                    "\r",
                    "chatList.setLoadingText(ux.locale.Manager.get('labels.Loading'));\r",
                    "store.load({callback:function(){\r",
                    "//    store.setLoadingText(false);\r",
                    "    chatList.setLoadingText(false);\r",
                    "}});\r",
                    ""
                ]
            },
            "designerId": "f2f792dd-a536-421d-888f-4ec06cbcfd90"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "response",
                    "messages"
                ],
                "fn": "loadChatMessagesStep2",
                "implHandler": [
                    "console.log(response);\r",
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var unmark='';\r",
                    "if(messages.response&&messages.response['items'])\r",
                    "{\r",
                    "    var messagesStore=Ext.getStore('Chat');\r",
                    "    if (messages.response.count>0)\r",
                    "    {\r",
                    "        for (var i=0;i<messages.response['items'].length;i++)\r",
                    "        {\r",
                    "            if (!messagesStore.getById(messages.response['items'][i].id))\r",
                    "            {\r",
                    "                messagesStore.add(messages.response['items'][i]);\r",
                    "                if(messages.response['items'][i].out==0&&messages.response['items'][i].read_state==0)\r",
                    "                {\r",
                    "                    unmark+=(unmark==''?'':',')+messages.response['items'][i].id\r",
                    "                };\r",
                    "            }\r",
                    "//             else\r",
                    "//             {\r",
                    "//                 console.log('vvv');\r",
                    "//                 console.log(messages.response['items'][i]);\r",
                    "//                 messagesStore.applyData(messages.response['items'][i]);\r",
                    "//             }\r",
                    "\r",
                    "        };\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "\r",
                    "    }\r",
                    "    if (unmark!='')\r",
                    "    {\r",
                    "        var url='https://api.vk.com/method/messages.markAsRead';\r",
                    "        var params=\r",
                    "            {\r",
                    "                v:'5.3',\r",
                    "                access_token:VKM.app.globals.authData['access_token'],\r",
                    "                message_ids:unmark\r",
                    "            };\r",
                    "        dataController.go(url,params);\r",
                    "    }\r",
                    "    messagesStore.sort('date','ASC');\r",
                    "\r",
                    "    if(messages.response.count>messagesStore.getCount())\r",
                    "    {\r",
                    "        messagesStore.add({id:0,date:0,user_id: false})\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        messagesStore.add({id:0,date:0,user_id: true});\r",
                    "        messagesStore.add({id:0,date:0,user_id: true});\r",
                    "    }\r",
                    "    if(response.request.options.params.offset)\r",
                    "    {\r",
                    "\r",
                    "        var activeItem = Ext.ComponentQuery.query(\"#chatList\");\r",
                    "        activeItem[0].scrollToRecord(VKM.app.globals['scrollToRecord'])\r",
                    "        VKM.app.globals['doNotScrollChat']='new';\r",
                    "    }\r",
                    "\r",
                    "};\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "d5e054c1-fb4c-4302-915e-80db9fe095e2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "initPolling",
                    "unreadOnly"
                ],
                "fn": "loadUnreadMessagesStep1",
                "implHandler": [
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var url='https://api.vk.com/method/execute.messages';\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token'],\r",
                    "        filters:1,\r",
                    "        rev:0\r",
                    "    };\r",
                    "var store=Ext.getStore('UnreadMessages');\r",
                    "\r",
                    "store.getProxy().setUrl(url);\r",
                    "store.getProxy().setExtraParams(params);\r",
                    "store.getProxy().setReader(\r",
                    "    Ext.create(\"ux.Dialogues\",\r",
                    "               {\r",
                    "                   rootProperty: 'response.messages.items',\r",
                    "                   totalProperty: 'response.messages.count'\r",
                    "               }\r",
                    "              )\r",
                    ")\r",
                    "store.load({\r",
                    "    callback:function(records, operation, success)\r",
                    "    {\r",
                    "        console.log('unread1');\r",
                    "        console.log(records.length);\r",
                    "        var users={};\r",
                    "        for (var i=0;i<records.length;i++)\r",
                    "        {\r",
                    "            var userId=(records[i].get(\"chat_id\")?20000000+records[i].get(\"chat_id\"):records[i].get(\"user_id\"));\r",
                    "            users[userId]=true;\r",
                    "        }\r",
                    "        var count=0;\r",
                    "        for (var i in users)\r",
                    "        {\r",
                    "            count+=1;\r",
                    "        };\r",
                    "\r",
                    "        controller.getMainTabBar().items.items[0].setBadgeText(store.getCount())\r",
                    "        controller.getMessagesTabBar().items.items[0].setBadgeText(count);\r",
                    "        controller.getMessagesTabBar().items.items[1].setBadgeText(store.getCount());\r",
                    "        var store1=Ext.getStore('InboxMessages');\r",
                    "        if(store1.getCount()!=0)\r",
                    "        {\r",
                    "            var messagesList=controller.getMessagesList();\r",
                    "            var currentPage=store1.currentPage;\r",
                    "            messagesList.setLoadingText(false);\r",
                    "            store1.load({callback:function(){store1.currentPage=currentPage;messagesList.setLoadingText(ux.locale.Manager.get('labels.Loading'))}});\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "});\r",
                    "\r",
                    "if(!unreadOnly)\r",
                    "{\r",
                    "    controller.loadMessagesStep1(initPolling);\r",
                    "}\r",
                    ""
                ]
            },
            "designerId": "62c51caa-fdda-45da-a5dd-bea0e5f51f68"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "friendsIndex",
                "selector": "component#friendsIndex"
            },
            "designerId": "d13ec83a-0584-45ed-b2bb-d65e85fdb010"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainTabBar",
                "selector": "tabbar#mainTabBar"
            },
            "designerId": "95fb2031-220d-4bfa-8e61-c5d060f31389"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "messagesTabBar",
                "selector": "tabbar#messagesTabBar"
            },
            "designerId": "19ae4027-da3f-46d2-bc44-731642c1048f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "dialoguesList",
                "selector": "list#dialoguesList"
            },
            "designerId": "8e4d5e0f-2e48-4c22-81b3-84cb20283a7a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "chatList",
                "selector": "list#chatList"
            },
            "designerId": "bfb1a38e-8b3c-47b4-b933-c82180476e5d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "messagesList",
                "selector": "list#inboxList"
            },
            "designerId": "15d02fe3-22ba-4c68-9dcd-8aad27278c10"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "response"
                ],
                "fn": "processUpdates",
                "implHandler": [
                    "if(!response)\r",
                    "{\r",
                    "    return;\r",
                    "}\r",
                    "var messagesStore=Ext.getStore('AllMessages');\r",
                    "var refreshDialogues=false;\r",
                    "var refreshUnread=false;\r",
                    "var refreshChat=false;\r",
                    "\r",
                    "\r",
                    "if(!VKM.app.globals.chat)\r",
                    "{\r",
                    "    VKM.app.globals.chat={currentUserId:null}\r",
                    "};\r",
                    "for (var i =0;i<response.length;i++)\r",
                    "{\r",
                    "    console.log(response[i]);\r",
                    "    \r",
                    "    if (response[i][0]==8)\r",
                    "    {\r",
                    "        var urecord=Ext.getStore('Users').getById(-response[i][1])\r",
                    "        if(urecord)\r",
                    "        {\r",
                    "            urecord.set({'last_seen':Ext.DateExtras.now(),online:1})\r",
                    "            Ext.getStore('Users').add(urecord);\r",
                    "        }\r",
                    "        var urecord=Ext.getStore('Friends').getById(-response[i][1])\r",
                    "        if(urecord)\r",
                    "        {\r",
                    "            urecord.set({'last_seen':Ext.DateExtras.now(),online:1});\r",
                    "            Ext.getStore('Friends').add(urecord);\r",
                    "        }\r",
                    "        \r",
                    "    }\r",
                    "    if (response[i][0]==9)\r",
                    "    {\r",
                    "        var urecord=Ext.getStore('Users').getById(-response[i][1])\r",
                    "        if(urecord)\r",
                    "        {\r",
                    "            urecord.set({'last_seen':Ext.DateExtras.now(),online:0});\r",
                    "            Ext.getStore('Users').add(urecord);\r",
                    "        }\r",
                    "        var urecord=Ext.getStore('Friends').getById(-response[i][1])\r",
                    "        if(urecord)\r",
                    "        {\r",
                    "            urecord.set({'last_seen':Ext.DateExtras.now(),online:0});\r",
                    "            Ext.getStore('Friends').add(urecord)\r",
                    "        }\r",
                    "        \r",
                    "        \r",
                    "    }\r",
                    "\r",
                    "    if (response[i][0]==51)\r",
                    "    {\r",
                    "        //var message=messagesStore.getById(response[i][1]);\r",
                    "        if(response[i][2]==0)\r",
                    "        {\r",
                    "            refreshDialogues=true\r",
                    "        };\r",
                    "\r",
                    "    }\r",
                    "    if (response[i][0]==0)\r",
                    "    {\r",
                    "\r",
                    "        refreshDialogues=true;\r",
                    "//         var message=messagesStore.getById(response[i][1]);\r",
                    "//         if (response[i][2]==0)\r",
                    "//         {\r",
                    "//             messagesStore.remove(message);\r",
                    "//             message.save();\r",
                    "//             messagesStore.remove(message);\r",
                    "//         }\r",
                    "    }\r",
                    "    if (response[i][0]==4)\r",
                    "    {\r",
                    "        refreshDialogues=true;\r",
                    "        refreshUnread=true;\r",
                    "        console.log(VKM.app.globals.chat);\r",
                    "        console.log(response[i][3]);\r",
                    "        console.log(VKM.app.globals.authData['user_id']);\r",
                    "\r",
                    "        var suserid=response[i][3];\r",
                    "        if(VKM.app.globals.chat.currentUserId==response[i][3])\r",
                    "        {\r",
                    "            refreshChat=true;\r",
                    "\r",
                    "        }\r",
                    "        if(VKM.app.globals.chat.currentChatId+2000000000==response[i][3])\r",
                    "        {\r",
                    "            refreshChat=true;\r",
                    "        };\r",
                    "\r",
                    "        if(!VKM.app.globals.settings.globalSilenceMode)\r",
                    "        {\r",
                    "            var settingsStore=Ext.getStore('userSettings');\r",
                    "\r",
                    "            var record=settingsStore.getById(response[i][3]);\r",
                    "\r",
                    "            if (record)\r",
                    "            {\r",
                    "                if(record.get('sound')&&record.get('sound')!='none')\r",
                    "                {\r",
                    "                    VKM.app.globals.notificationAudio[record.get('sound')].play();\r",
                    "                }\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "                if(VKM.app.globals.settings.newMessageSound&&VKM.app.globals.settings.newMessageSound!='none')\r",
                    "                {\r",
                    "                    VKM.app.globals.notificationAudio[VKM.app.globals.settings.newMessageSound].play();\r",
                    "                };\r",
                    "            }\r",
                    "            if (record)\r",
                    "            {\r",
                    "                if(record.get('vibrate')&&tizen)\r",
                    "                {\r",
                    "                    navigator.vibrate([1000, 1000]);\r",
                    "                }\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "                if(VKM.app.globals.settings.newMessageVibrate&&tizen)\r",
                    "                {\r",
                    "                    navigator.vibrate([1000, 1000]);\r",
                    "                };\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "            \r",
                    "            if(!refreshChat)\r",
                    "            {\r",
                    "                var sender=Ext.getStore('Users').getById(response[i][3]);\r",
                    "                var title='';\r",
                    "                var img='';\r",
                    "                var icon='';\r",
                    "\r",
                    "                if(sender)\r",
                    "                {\r",
                    "                    title=sender.get('first_name')+','+sender.get('last_name');\r",
                    "                    //icon=sender.get('photo_50');\r",
                    "                }\r",
                    "                else\r",
                    "                {\r",
                    "                    title=response[i][5]\r",
                    "                }\r",
                    "                var messageBody=response[i][6];\r",
                    "                //         if(messageBody)\r",
                    "                //         {\r",
                    "                //             messageBody=VKM.app.smiles(messageBody)\r",
                    "                //         };\r",
                    "                console.log(response[i][2])\r",
                    "                console.log(response[i][2]&&2)\r",
                    "                if (record&&tizen&&(response[i][2]&&2))\r",
                    "                {\r",
                    "                    if(record.get('banner'))\r",
                    "                    {\r",
                    "                        VKM.app.SimpleNotification(title,messageBody,icon)\r",
                    "                    }\r",
                    "                }\r",
                    "                else\r",
                    "                {\r",
                    "                    if(VKM.app.globals.settings.newMessageNotification&&tizen&&(response[i][2]&&2))\r",
                    "                    {\r",
                    "                        VKM.app.SimpleNotification(title,messageBody,icon)\r",
                    "                    };\r",
                    "                }\r",
                    "            }\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "    if (response[i][0]==2)\r",
                    "    {\r",
                    "\r",
                    "        var messageId=response[i][1];\r",
                    "        var isUnread=response[i][2]&&1;\r",
                    "        var isDeleted=response[i][2]&&128;\r",
                    "        var message=messagesStore.getById(response[i][1]);\r",
                    "        if (isDeleted&&message)\r",
                    "        {\r",
                    "            messagesStore.remove(message);\r",
                    "            refreshDialogues=true;\r",
                    "            refreshUnread=true;\r",
                    "        }\r",
                    "\r",
                    "        if (isUnread&&message)\r",
                    "        {\r",
                    "            var messageData=message.getData();\r",
                    "            messageData.read_state=0;\r",
                    "            message.set(messageData);\r",
                    "            //message.save();\r",
                    "            refreshUnread=true;\r",
                    "        }\r",
                    "        if(VKM.app.globals.chat.currentUserId==response[i][3])\r",
                    "        {\r",
                    "            refreshChat=true;\r",
                    "        };\r",
                    "    }\r",
                    "    if (response[i][0]==3)\r",
                    "    {\r",
                    "        var messageId=response[i][1];\r",
                    "        var isUnread=response[i][2]&&1;\r",
                    "        var isDeleted=response[i][2]&&128;\r",
                    "        var message=messagesStore.getById(response[i][3]);\r",
                    "        if (!message)\r",
                    "        {\r",
                    "            if (isUnread)\r",
                    "            {\r",
                    "                refreshDialogues=true;\r",
                    "                refreshUnread=true;\r",
                    "            }\r",
                    "            if (isDeleted)\r",
                    "            {\r",
                    "                refreshDialogues=true;\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            if (isUnread)\r",
                    "            {\r",
                    "                refreshDialogues=true;\r",
                    "                refreshUnread=true;\r",
                    "            }\r",
                    "            if (isDeleted)\r",
                    "            {\r",
                    "                refreshDialogues=true;\r",
                    "            }\r",
                    "        }\r",
                    "        if(VKM.app.globals.chat.currentUserId==response[i][3])\r",
                    "        {\r",
                    "            refreshChat=true;\r",
                    "        };\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "    if (response[i][0]==2)\r",
                    "    {\r",
                    "        var messageId=response[i][1];\r",
                    "        var isUnread=response[i][2]&&1;\r",
                    "        var isDeleted=response[i][2]&&128;\r",
                    "        var message=messagesStore.getById(response[i][3]);\r",
                    "        if (!message)\r",
                    "        {\r",
                    "            if (isUnread)\r",
                    "            {\r",
                    "                refreshDialogues=true;\r",
                    "            }\r",
                    "            if (isDeleted)\r",
                    "            {\r",
                    "                refreshDialogues=true;\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            if (isUnread)\r",
                    "            {\r",
                    "                refreshDialogues=true;\r",
                    "                refreshUnread=true;\r",
                    "            }\r",
                    "            if (isDeleted)\r",
                    "            {\r",
                    "                refreshDialogues=true;\r",
                    "            }\r",
                    "        }\r",
                    "        if(VKM.app.globals.chat.userId==response[i][1])\r",
                    "        {\r",
                    "            refreshChat=true;\r",
                    "        };\r",
                    "\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "if (refreshChat)\r",
                    "{\r",
                    "    var controller=VKM.app.getController('InitDataLoader');\r",
                    "    var chatStore=Ext.getStore('Chat');\r",
                    "    var currentCPage=chatStore.currentPage;\r",
                    "    var currentCLimit=chatStore.getPageSize();\r",
                    "    console.log(currentCPage);\r",
                    "    chatStore.currentPage=1;\r",
                    "    chatStore.setPageSize(5);\r",
                    "    chatStore.loadPage(1,{callback:function()\r",
                    "                {\r",
                    "                    console.log(currentCPage);\r",
                    "                    chatStore.setPageSize(currentLimit);\r",
                    "                    chatStore.currentPage=currentCPage;\r",
                    "\r",
                    "                }\r",
                    "               });\r",
                    "    refreshUnread=false;\r",
                    "    controller.loadUnreadMessagesStep1(false,true);\r",
                    "\r",
                    "}\r",
                    "\r",
                    "if (refreshDialogues)\r",
                    "{\r",
                    "\r",
                    "    var controller=VKM.app.getController('InitDataLoader');\r",
                    "    var store=Ext.getStore('AllMessages');\r",
                    "    var currentPage=store.currentPage;\r",
                    "    var currentLimit=store.getPageSize();\r",
                    "    var dialoguesList=controller.getDialoguesList();\r",
                    "    dialoguesList.setLoadingText(false);\r",
                    "\r",
                    "\r",
                    "    //console.log(limit);\r",
                    "    store.currentPage=1;\r",
                    "    store.setPageSize(5);\r",
                    "\r",
                    "    store.loadPage(1,{callback:function()\r",
                    "                      {\r",
                    "                          store.setPageSize(currentLimit);\r",
                    "                          store.currentPage=currentPage;\r",
                    "                          dialoguesList.setLoadingText(ux.locale.Manager.get('labels.Loading'));\r",
                    "                      }\r",
                    "                     });\r",
                    "    if(refreshUnread)\r",
                    "        controller.loadUnreadMessagesStep1(false,true);\r",
                    "\r",
                    "\r",
                    "    //controller.refreshUnread(0,true,10);\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    if (refreshUnread)\r",
                    "    {\r",
                    "\r",
                    "        var controller=VKM.app.getController('InitDataLoader');\r",
                    "        controller.loadUnreadMessagesStep1(false,true);\r",
                    "    }\r",
                    "}"
                ]
            },
            "designerId": "7b019e50-01da-412a-965f-701041cdff2e"
        }
    ]
}