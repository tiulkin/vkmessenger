{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Search"
    },
    "designerId": "8c529b1b-9b18-44d0-ad20-fa7d8581bb50",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "[searchFriends=true]",
                "designer|targetType": "Ext.dataview.List",
                "fn": "globalSearchFriendsItemTap",
                "implHandler": [
                    "var panel=this.getSearchCard();\r",
                    "this.currentContact=record;\r",
                    "this.getSearchTabBar().setHidden(true);\r",
                    "panel.setActiveItem(2);\r",
                    "\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "itemtap"
            },
            "designerId": "a139239a-209b-4081-8325-32f0adefecc8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#backToSearchButton",
                "designer|targetType": "Ext.Button",
                "fn": "backToSearchButtonTap",
                "implHandler": [
                    "this.getSearchTabBar().setHidden(false);\r",
                    "var tab=0;\r",
                    "if(this.setCurrentTab)\r",
                    "{\r",
                    "    tab=this.setCurrentTab;\r",
                    "}\r",
                    "\r",
                    "this.getSearchCard().setActiveItem(tab);\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "9e7643fe-f1b8-4054-a234-4c04f1fdaff9"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "foundContact",
                "selector": "container#foundContact"
            },
            "designerId": "cc430fd3-82b7-49db-80ee-fc132c84da72"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "searchCard",
                "selector": "tabpanel#searchTabPanel"
            },
            "designerId": "fa722445-c6fc-4025-b565-dc88fe711412"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "searchTabBar",
                "selector": "tabbar#searchTabBar"
            },
            "designerId": "415399f9-8bbc-42dc-a202-43f0f67a092e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "component"
                ],
                "fn": "refreshData",
                "implHandler": [
                    "var controller=VKM.app.getController('Search');\r",
                    "var panel=component;\r",
                    "if(!panel)\r",
                    "{\r",
                    "    panel=controller.getCard();\r",
                    "}\r",
                    "var params=\r",
                    "    {\r",
                    "        v:'5.3',\r",
                    "        access_token:VKM.app.globals.authData['access_token'],\r",
                    "        target_uid:controller.currentContact.get('id')\r",
                    "    };\r",
                    "\r",
                    "var store=Ext.getStore('FriendsInCommon');\r",
                    "store.removeAll();\r",
                    "store.getProxy().setExtraParams(params);\r",
                    "store.getProxy().setUrl(\"https://api.vk.com/method/execute.friendsInCommon\");\r",
                    "store.getProxy().setReader(\r",
                    "    Ext.create(\"ux.Contact\",\r",
                    "               {\r",
                    "                   rootProperty: 'response.friends'\r",
                    "               }\r",
                    "              )\r",
                    ");\r",
                    "store.load({callback:function(request,success,response){\r",
                    "\r",
                    "    var controller=VKM.app.getController('Search');\r",
                    "    var record=Ext.getStore('Users').getById(controller.currentContact.get('id'));\r",
                    "    var panel=Ext.ComponentQuery.query('#searchContactCard')[0];\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var isOnlineCls=\"\";\r",
                    "    if (record.get('online'))\r",
                    "    {\r",
                    "        isOnlineCls='class=\"userOnline\"';\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        isOnlineCls='class=\"userOffline\"';\r",
                    "    }\r",
                    "\r",
                    "    var photo =record.get('photo_200')\r",
                    "    if (!photo)\r",
                    "    {\r",
                    "        photo=record.get('photo_200_orig');\r",
                    "    }\r",
                    "\r",
                    "    panel.down('#userText').setHtml('<span '+isOnlineCls+'>'+record.get('first_name')+' '+record.get('last_name')+'</span>');\r",
                    "    panel.down('#userPhoto').setHtml('<img src=\"'+photo+'\"></img>');\r",
                    "    //console.log(1);\r",
                    "    //this.loadChatHeaderData(record.get('user_id'));\r",
                    "    //controller.loadChatMessagesStep1(record.get('user_id'));\r",
                    "\r",
                    "\r",
                    "    //console.log(record)\r",
                    "\r",
                    "    var title=panel.down('#friendsTitle');\r",
                    "    title.setHtml(ux.locale.Manager.get('labels.mutualFriends')+'('+store.getCount()+'):');\r",
                    "    var friendsList=panel.down('#friendsListSearch');\r",
                    "\r",
                    "\r",
                    "    var location='';\r",
                    "\r",
                    "    var country=record.get('countryName');\r",
                    "    if(country)\r",
                    "    {\r",
                    "        location=country+',';\r",
                    "    }\r",
                    "\r",
                    "    var city=record.get('cityName');\r",
                    "    if(city)\r",
                    "    {\r",
                    "        location+=city;\r",
                    "    }\r",
                    "    if(location!='')\r",
                    "    {\r",
                    "        panel.query('#location')[0].setHidden(false);\r",
                    "        var html='<b>'+location+'</b>';\r",
                    "        panel.query('#location')[0].setHtml(html);\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        panel.query('#location')[0].setHidden(true);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    var university_name=record.get('university_name');\r",
                    "\r",
                    "    var html='';\r",
                    "\r",
                    "    if(university_name)\r",
                    "    {\r",
                    "        panel.query('#body')[0].setHidden(false);\r",
                    "        html+=university_name\r",
                    "        panel.query('#body')[0].setHtml(html);\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        panel.query('#body')[0].setHidden(true);\r",
                    "    }\r",
                    "    var status=record.get('status');\r",
                    "    var statusComponent=panel.query('#body1')[0]\r",
                    "\r",
                    "    if(status)\r",
                    "    {\r",
                    "        console.log(status);\r",
                    "        statusComponent.setHidden(false);\r",
                    "        statusComponent.setHtml('<i>'+VKM.app.smiles(status)+'</i>');\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        statusComponent.setHidden(true);\r",
                    "    }\r",
                    "\r",
                    "    //     console.log(statusComponent.getHtml());\r",
                    "    //     console.log(statusComponent.setHeight(100));\r",
                    "    //     console.log(statusComponent.setWidth(100));\r",
                    "\r",
                    "    if (record.get('last_seen'))\r",
                    "    {\r",
                    "        var last_seen=new Date(parseInt(record.get('last_seen').time)*1000);\r",
                    "        panel.query('#lastseen')[0].setHidden(false);\r",
                    "        panel.query('#lastseen')[0].setHtml(ux.locale.Manager.get('labels.lastvisit')+' '+moment(last_seen).fromNow());\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        panel.query('#lastseen')[0].setHidden(false);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "    if (store.getCount()>0)\r",
                    "    {\r",
                    "        friendsList.setHidden(false);\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        friendsList.setHidden(true);\r",
                    "        title.setHtml(ux.locale.Manager.get('labels.noMutualFriends'));\r",
                    "    }\r",
                    "\r",
                    "    var isFriend=record.get(\"isFriend\");\r",
                    "\r",
                    "    if(isFriend)\r",
                    "    {\r",
                    "        if(isFriend.friend_status==0||isFriend.friend_status==2)\r",
                    "        {\r",
                    "            panel.query('#addFriendButtonSearch')[0].setHidden(false);\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.query('#addFriendButtonSearch')[0].setHidden(true);\r",
                    "        }\r",
                    "        if(isFriend.friend_status==3||isFriend.friend_status==1)\r",
                    "        {\r",
                    "            panel.query('#removeFromFriendsButtonSearch')[0].setHidden(false);\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.query('#removeFromFriendsButtonSearch')[0].setHidden(true);\r",
                    "        }\r",
                    "        if(isFriend.friend_status==2)\r",
                    "        {\r",
                    "            panel.query('#removeRequestButtonSearch')[0].setHidden(false);\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.query('#removeRequestButtonSearch')[0].setHidden(true);\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "    panel.query('#contactStuff')[0].setHidden(false);\r",
                    "    panel.query('#userNewMessageSettings')[0].setHidden(false);\r",
                    "\r",
                    "\r",
                    "\r",
                    "    var button=panel.down('#callToFriendButton');\r",
                    "    var controller=VKM.app.getController('Search');\r",
                    "    var contact=record;\r",
                    "\r",
                    "    button.setHidden(true);\r",
                    "\r",
                    "    if(contact.get('mobile_phone'))\r",
                    "    {\r",
                    "        var phone1=contact.get('mobile_phone');\r",
                    "        button.setText(ux.locale.Manager.get('labels.Call')+' '+phone1);\r",
                    "        button.phone=phone1;\r",
                    "        button.setHidden(false);\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        button.setHidden(true);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    var userId=record.get('id');\r",
                    "    panel.down('#userNewMessageSettings').userId=userId;\r",
                    "\r",
                    "\r",
                    "    panel.down('#userNewMessageSettings').setTitle(ux.locale.Manager.get('labels.newMessage'));\r",
                    "    panel.down('#customPropsSearch').setLabel(ux.locale.Manager.get('labels.customProps'));\r",
                    "    panel.down('#soundSelectSearch').setLabel(ux.locale.Manager.get('labels.Sound'));\r",
                    "    panel.down('#vibrateToggleSearch').setLabel(ux.locale.Manager.get('labels.Vibrate'));\r",
                    "    panel.down('#bannerToggleSearch').setLabel(ux.locale.Manager.get('labels.Banner'));\r",
                    "    //this.down('#customProps').setTitle(ux.locale.Manager.get('labels.customProps'));\r",
                    "\r",
                    "\r",
                    "    var settingsStore=Ext.getStore('userSettings');\r",
                    "\r",
                    "    var record1=settingsStore.getById(userId);\r",
                    "\r",
                    "\r",
                    "    var soundSelect=[\r",
                    "        {\r",
                    "            value:'none',\r",
                    "            text:ux.locale.Manager.get('labels.none')\r",
                    "        },\r",
                    "        {\r",
                    "            value:1,\r",
                    "            text:\"#1\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:2,\r",
                    "            text:\"#2\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:3,\r",
                    "            text:\"#3\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:4,\r",
                    "            text:\"#4\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:5,\r",
                    "            text:\"#5\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:6,\r",
                    "            text:\"#6\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:7,\r",
                    "            text:\"#7\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:8,\r",
                    "            text:\"#8\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:9,\r",
                    "            text:\"#9\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:10,\r",
                    "            text:\"#10\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:11,\r",
                    "            text:\"#11\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:12,\r",
                    "            text:\"#12\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:13,\r",
                    "            text:\"#13\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:14,\r",
                    "            text:\"#14\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:15,\r",
                    "            text:\"#15\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:16,\r",
                    "            text:\"#16\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:17,\r",
                    "            text:\"#17\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:18,\r",
                    "            text:\"#18\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:19,\r",
                    "            text:\"#19\"\r",
                    "        },\r",
                    "        {\r",
                    "            value:20,\r",
                    "            text:\"#20\"\r",
                    "        }\r",
                    "    ];\r",
                    "\r",
                    "    panel.down('#soundSelectSearch').setOptions(soundSelect);\r",
                    "\r",
                    "    VKM.app.globals.isInit=true;\r",
                    "    \r",
                    "    if(record1)\r",
                    "    {\r",
                    "        if (record1.get('sound'))\r",
                    "        {\r",
                    "            panel.down('#soundSelectSearch').setValue(record1.get('sound'));\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.down('#soundSelectSearch').setValue(1);\r",
                    "        };\r",
                    "        if (record1.get('vibrate'))\r",
                    "        {\r",
                    "            panel.down('#vibrateToggleSearch').setValue(record1.get('vibrate'));\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.down('#vibrateToggleSearch').setValue(1);\r",
                    "        };\r",
                    "        if (record1.get('banner'))\r",
                    "        {\r",
                    "            panel.down('#bannerToggleSearch').setValue(record1.get('banner'));\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.down('#bannerToggleSearch').setValue(0);\r",
                    "        };\r",
                    "        if (record1.get('isActive'))\r",
                    "        {\r",
                    "            if(!record1.get('isActive'))\r",
                    "            {\r",
                    "                panel.down('#soundSelectSearch').setDisabled(true);\r",
                    "                panel.down('#vibrateToggleSearch').setDisabled(true);\r",
                    "                panel.down('#bannerToggleSearch').setDisabled(true);\r",
                    "            }\r",
                    "            panel.down('#customPropsSearchSearch').setValue(record1.get('isActive'));\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.down('#soundSelectSearch').setDisabled(true);\r",
                    "            panel.down('#vibrateToggleSearch').setDisabled(true);\r",
                    "            panel.down('#bannerToggleSearch').setDisabled(true);\r",
                    "            panel.down('#customPropsSearch').setValue(0);\r",
                    "        }\r",
                    "        //     if (record.get('keepBanner'))\r",
                    "        //     {\r",
                    "        //         this.down('#keepBannerCheck').setValue(record.get('isActive'));\r",
                    "        //     };\r",
                    "    }\r",
                    "    else\r",
                    "    {        \r",
                    "        panel.down('#soundSelectSearch').setDisabled(true);\r",
                    "        panel.down('#vibrateToggleSearch').setDisabled(true);\r",
                    "        panel.down('#bannerToggleSearch').setDisabled(true);\r",
                    "        panel.down('#soundSelectSearch').setValue(null);\r",
                    "        panel.down('#vibrateToggleSearch').setValue(null);\r",
                    "        panel.down('#bannerToggleSearch').setValue(null);\r",
                    "        panel.down('#customPropsSearch').setValue(false);\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    VKM.app.globals.isInit=false;\r",
                    "\r",
                    "\r",
                    "}\r",
                    "           });\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "27b7ac17-e9be-4193-b7ef-69a64eb560d7"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "card",
                "selector": "container#searchContactCard"
            },
            "designerId": "79ff9c1d-7b67-4b9c-a273-c76567a92374"
        }
    ]
}