{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Contacts"
    },
    "designerId": "02871744-0acf-4221-9a28-22041458049c",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#allFriendsList",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onFriendsItemTap",
                "implHandler": [
                    "var panel=this.getContactsTabPanel();\r",
                    "this.getContactsTabBar().setHidden(true);\r",
                    "this.currentContact=record;\r",
                    "this.currentPhoneContact=null;\r",
                    "this.phoneUser=null;\r",
                    "panel.setActiveItem(3);\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "itemtap"
            },
            "designerId": "c59f5e05-a961-4994-8a77-8f5eccf9f240"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#allFriendsList1",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onOnlineItemTap",
                "implHandler": [
                    "\r",
                    "var controller=VKM.app.getController('InitDataLoader');\r",
                    "var dataController=VKM.app.getController('DataLoader');\r",
                    "var panel=this.getContactsTabPanel();\r",
                    "var contact=this.getContact();\r",
                    "var isOnlineCls=\"\";\r",
                    "if (record.get('online'))\r",
                    "{\r",
                    "    isOnlineCls='class=\"userOnline\"';\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    isOnlineCls='class=\"userOffline\"';\r",
                    "}\r",
                    "\r",
                    "var photo =record.get('photo_200')\r",
                    "if (!photo)\r",
                    "{\r",
                    "    photo=record.get('photo_200_orig');\r",
                    "}\r",
                    "\r",
                    "contact.down('#userText').setHtml('<span '+isOnlineCls+'>'+record.get('first_name')+' '+record.get('last_name')+'</span>');\r",
                    "contact.down('#userPhoto').setHtml('<img src=\"'+photo+'\"></img>');\r",
                    "//console.log(1);\r",
                    "//this.loadChatHeaderData(record.get('user_id'));\r",
                    "//controller.loadChatMessagesStep1(record.get('user_id'));\r",
                    "this.getContactsTabBar().setHidden(true);\r",
                    "this.currentContact=record;\r",
                    "panel.setActiveItem(3);\r",
                    "\r",
                    "\r",
                    ""
                ],
                "name": "itemtap"
            },
            "designerId": "a940f639-5e52-46dd-9a15-f1737c534e3c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "contacts",
                "selector": "container#contactsCard"
            },
            "designerId": "27f63a6d-2ae1-43ef-a8c5-9029ccf5be8b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "contact",
                "selector": "container#contact"
            },
            "designerId": "36be6d84-8d1d-492b-b3ab-eaeb2a6093df"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "contactsTabPanel",
                "selector": "tabpanel#contactsTabPanel"
            },
            "designerId": "2a4136dc-0adf-4ce1-8803-fb9068310f94"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#backToContactsButton",
                "designer|targetType": "Ext.Button",
                "fn": "onBackToContactsButtonTap",
                "implHandler": [
                    "this.getContactsTabBar().setHidden(false);\r",
                    "\r",
                    "var controller=VKM.app.getController('Contacts');\r",
                    "if(!this.setCurrentTab)\r",
                    "{\r",
                    "    this.setCurrentTab=0\r",
                    "}\r",
                    "this.getContactsTabPanel().setActiveItem(this.setCurrentTab);\r",
                    ""
                ],
                "name": "tap"
            },
            "designerId": "e6a81fe0-e5ee-4883-b8dc-9946ea763392"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "contactsTabBar",
                "selector": "tabbar#contactsTabBar"
            },
            "designerId": "f41d9496-4b0b-44a5-83c6-d433367479f5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "controller"
                ],
                "fn": "chooseAlbumDialogue",
                "implHandler": [
                    "var dataController=VKM.app.getController('InitDataLoader');\r",
                    "\r",
                    "controller.overlay=Ext.Viewport.add({\r",
                    "    xtype: 'popupchooser',\r",
                    "    items:[\r",
                    "        {xtype:'albumlist',controller:controller},\r",
                    "        {\r",
                    "            xtype: 'container',\r",
                    "            width: '100%',\r",
                    "            docked: 'bottom',\r",
                    "            style: {\r",
                    "                'font-size': '1.2em'\r",
                    "            },\r",
                    "            ui: 'plain',\r",
                    "            layout: {\r",
                    "                align: 'stretch',\r",
                    "                pack: 'center',\r",
                    "                type: 'hbox'\r",
                    "            },\r",
                    "            items: [\r",
                    "                {\r",
                    "                    xtype: 'button',\r",
                    "                    width: '30%',\r",
                    "                    itemId: 'chatAttachConfirmButton',\r",
                    "                    handler: function(){\r",
                    "\r",
                    "                    },\r",
                    "                    ui: 'action',\r",
                    "                    hidden:true,\r",
                    "                    iconAlign: 'center',\r",
                    "                    iconCls: 'checkMark'\r",
                    "                },\r",
                    "                {\r",
                    "                    xtype: 'button',\r",
                    "                    width: '30%',\r",
                    "                    itemId: 'chatAttachCancelButton',\r",
                    "                    handler: function(){controller.overlay.destroy()},\r",
                    "                    ui: 'action',\r",
                    "                    iconAlign: 'center',\r",
                    "                    iconCls: 'delete'\r",
                    "                }\r",
                    "            ]\r",
                    "        }\r",
                    "    ]\r",
                    "});\r",
                    "dataController.loadAlbumsStep1();"
                ]
            },
            "designerId": "47a4085f-ea62-4c2f-a6b4-3c939c6c58b0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "controller"
                ],
                "fn": "uploadPhoto",
                "implHandler": [
                    "var dataController=VKM.app.getController('InitDataLoader');\r",
                    "controller.uploadOverlay=controller.overlay=Ext.Viewport.add({\r",
                    "    xtype: 'popupchooser',\r",
                    "    centered:false,\r",
                    "    modal:false,\r",
                    "    width: '10px',\r",
                    "    height:'10px',\r",
                    "    items:[\r",
                    "        {\r",
                    "            xtype: 'container',\r",
                    "            width: '10px',\r",
                    "            docked: 'bottom',\r",
                    "            itemId:'tmpPhoto',\r",
                    "            style: {\r",
                    "                'font-size': '1.2em'\r",
                    "            },\r",
                    "            ui: 'plain',\r",
                    "            layout: {\r",
                    "                align: 'stretch',\r",
                    "                pack: 'center',\r",
                    "                type: 'hbox'\r",
                    "            }\r",
                    "        }]\r",
                    "});\r",
                    "\r",
                    "\r",
                    "\r",
                    "var a=Ext.ComponentQuery.query('#tmpPhoto')[0];\r",
                    "\r",
                    "\r",
                    "VKM.app.globals.aaa=function(){\r",
                    "\r",
                    "    VKM.app.getController('DataLoader').go('https://api.vk.com/method/photos.getProfileUploadServer',{v: '5.4',access_token: VKM.app.globals.authData.access_token},VKM.app.getController('DataLoader').uploadProfileStep2,{});\r",
                    "}\r",
                    "a.setHtml('<form name =\"subscribe\" id=\"demo-form\" action=\"#\"> <input type = \"file\" onchange = \"VKM.app.globals.aaa()\" id = \"photoToUpload1\" name = \"photo\" accept= \"image\" / ></form>');\r",
                    "document.getElementById(\"photoToUpload1\").click();\r",
                    "//a.setHidden(true);\r",
                    ""
                ]
            },
            "designerId": "a74c9beb-444b-4f1e-bd1d-edc2d9d61186"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "controller"
                ],
                "fn": "takePhoto",
                "implHandler": [
                    "var dataController=VKM.app.getController('InitDataLoader');\r",
                    "controller.uploadOverlay=controller.overlay=Ext.Viewport.add({\r",
                    "    xtype: 'popupchooser',\r",
                    "    centered:false,\r",
                    "    modal:false,\r",
                    "    width: '10px',\r",
                    "    height:'10px',\r",
                    "    items:[\r",
                    "        {\r",
                    "            xtype: 'container',\r",
                    "            width: '10px',\r",
                    "            docked: 'bottom',\r",
                    "            itemId:'tmpPhoto',\r",
                    "            style: {\r",
                    "                'font-size': '1.2em'\r",
                    "            },\r",
                    "            ui: 'plain',\r",
                    "            layout: {\r",
                    "                align: 'stretch',\r",
                    "                pack: 'center',\r",
                    "                type: 'hbox'\r",
                    "            }\r",
                    "        }]\r",
                    "});\r",
                    "\r",
                    "\r",
                    "\r",
                    "var a=Ext.ComponentQuery.query('#tmpPhoto')[0];\r",
                    "\r",
                    "\r",
                    "VKM.app.globals.aaa=function(){\r",
                    "\r",
                    "    VKM.app.getController('DataLoader').go('https://api.vk.com/method/photos.getProfileUploadServer',{v: '5.4',access_token: VKM.app.globals.authData.access_token},VKM.app.getController('DataLoader').uploadProfileStep2,{});\r",
                    "}\r",
                    "a.setHtml('<form name =\"subscribe\" id=\"demo-form\" action=\"#\"> <input type = \"file\" capture=\"camera\" onchange = \"VKM.app.globals.aaa()\" id = \"photoToUpload1\" name = \"photo\" accept= \"image\" / ></form>');\r",
                    "document.getElementById(\"photoToUpload1\").click();"
                ]
            },
            "designerId": "1a9fbaca-dfa6-4e11-acbd-6c455d3646c0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "dataview#friendsList",
                "designer|targetType": "Ext.dataview.DataView",
                "fn": "onFriendsListItemTap",
                "implHandler": [
                    "var panel=this.getContactsTabPanel();\r",
                    "this.currentContact=record;\r",
                    "this.currentPhoneContact=null;\r",
                    "this.phoneUser=null;\r",
                    "this.refreshData(this.getContacts());\r",
                    "\r",
                    ""
                ],
                "name": "itemtap"
            },
            "designerId": "03dd0d5c-6481-498f-b564-bb42b4f2f0f6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "component"
                ],
                "fn": "refreshData",
                "implHandler": [
                    "var controller=VKM.app.getController('Contacts');\r",
                    "var panel=component;\r",
                    "if(!panel)\r",
                    "{\r",
                    "    panel=controller.getContacts();\r",
                    "}\r",
                    "var isOnlineCls=\"\";\r",
                    "if(controller.currentContact&&controller.currentContact.get('id'))\r",
                    "{\r",
                    "    var params=\r",
                    "        {\r",
                    "            v:'5.3',\r",
                    "            access_token:VKM.app.globals.authData['access_token'],\r",
                    "            target_uid:controller.currentContact.get('id')\r",
                    "        };\r",
                    "\r",
                    "    var store=Ext.getStore('FriendsInCommon');\r",
                    "    store.removeAll();\r",
                    "    store.getProxy().setExtraParams(params);\r",
                    "    store.getProxy().setUrl(\"https://api.vk.com/method/execute.friendsInCommon\");\r",
                    "    store.getProxy().setReader(\r",
                    "        Ext.create(\"ux.Contact\",\r",
                    "                   {\r",
                    "                       rootProperty: 'response.friends'\r",
                    "                   }\r",
                    "                  )\r",
                    "    );\r",
                    "    store.load({callback:function(request,success,response){\r",
                    "\r",
                    "        var controller=VKM.app.getController('Contacts');\r",
                    "\r",
                    "        var record=Ext.getStore('Users').getById(controller.currentContact.get('id'));\r",
                    "        var panel=Ext.ComponentQuery.query('#contactCard')[0];\r",
                    "\r",
                    "        if (record.get('online'))\r",
                    "        {\r",
                    "            isOnlineCls='class=\"userOnline\"';\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            isOnlineCls='class=\"userOffline\"';\r",
                    "        }\r",
                    "\r",
                    "        var photo =record.get('photo_200')\r",
                    "        if (!photo)\r",
                    "        {\r",
                    "            photo=record.get('photo_200_orig');\r",
                    "        }\r",
                    "\r",
                    "        panel.down('#userText').setHtml('<span '+isOnlineCls+'>'+record.get('first_name')+' '+record.get('last_name')+'</span>');\r",
                    "        panel.down('#userPhoto').setHtml('<img src=\"'+photo+'\"></img>');\r",
                    "        //console.log(1);\r",
                    "        //this.loadChatHeaderData(record.get('user_id'));\r",
                    "        //controller.loadChatMessagesStep1(record.get('user_id'));\r",
                    "\r",
                    "\r",
                    "        //console.log(record)\r",
                    "\r",
                    "        var title=panel.down('#friendsTitle');\r",
                    "        title.setHtml(ux.locale.Manager.get('labels.mutualFriends')+'('+store.getCount()+'):');\r",
                    "        var friendsList=panel.down('#friendsList');\r",
                    "\r",
                    "\r",
                    "        var location='';\r",
                    "\r",
                    "        var country=record.get('countryName');\r",
                    "        if(country)\r",
                    "        {\r",
                    "            location=country+',';\r",
                    "        }\r",
                    "\r",
                    "        var city=record.get('cityName');\r",
                    "        if(city)\r",
                    "        {\r",
                    "            location+=city;\r",
                    "        }\r",
                    "        if(location!='')\r",
                    "        {\r",
                    "            panel.query('#location')[0].setHidden(false);\r",
                    "            var html='<b>'+location+'</b>';\r",
                    "            panel.query('#location')[0].setHtml(html);\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.query('#location')[0].setHidden(true);\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "        var university_name=record.get('university_name');\r",
                    "\r",
                    "        var html='';\r",
                    "\r",
                    "        if(university_name)\r",
                    "        {\r",
                    "            panel.query('#body')[0].setHidden(false);\r",
                    "            html+=university_name\r",
                    "            panel.query('#body')[0].setHtml(html);\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.query('#body')[0].setHidden(true);\r",
                    "        }\r",
                    "        var status=record.get('status');\r",
                    "        var statusComponent=panel.query('#body1')[0]\r",
                    "\r",
                    "        if(status)\r",
                    "        {\r",
                    "\r",
                    "            statusComponent.setHidden(false);\r",
                    "            statusComponent.setHtml('<i>'+VKM.app.smiles(status)+'</i>');\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            statusComponent.setHidden(true);\r",
                    "        }\r",
                    "\r",
                    "        //     console.log(statusComponent.getHtml());\r",
                    "        //     console.log(statusComponent.setHeight(100));\r",
                    "        //     console.log(statusComponent.setWidth(100));\r",
                    "\r",
                    "        if (record.get('last_seen'))\r",
                    "        {\r",
                    "            var last_seen=new Date(parseInt(record.get('last_seen').time)*1000);\r",
                    "            panel.query('#lastseen')[0].setHidden(false);\r",
                    "            panel.query('#lastseen')[0].setHtml(ux.locale.Manager.get('labels.lastvisit')+' '+moment(last_seen).fromNow());\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.query('#lastseen')[0].setHidden(false);\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "\r",
                    "        if (store.getCount()>0)\r",
                    "        {\r",
                    "            friendsList.setHidden(false);\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            friendsList.setHidden(true);\r",
                    "            title.setHtml(ux.locale.Manager.get('labels.noMutualFriends'));\r",
                    "        }\r",
                    "\r",
                    "        var isFriend=record.get(\"isFriend\");\r",
                    "\r",
                    "        if(isFriend)\r",
                    "        {\r",
                    "            if(isFriend.friend_status==0||isFriend.friend_status==2)\r",
                    "            {\r",
                    "                panel.query('#addFriendButton')[0].setHidden(false);\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "                panel.query('#addFriendButton')[0].setHidden(true);\r",
                    "            }\r",
                    "            if(isFriend.friend_status==3||isFriend.friend_status==1)\r",
                    "            {\r",
                    "                panel.query('#removeFromFriendsButton')[0].setHidden(false);\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "                panel.query('#removeFromFriendsButton')[0].setHidden(true);\r",
                    "            }\r",
                    "            if(isFriend.friend_status==2)\r",
                    "            {\r",
                    "                panel.query('#removeRequestButton')[0].setHidden(false);\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "                panel.query('#removeRequestButton')[0].setHidden(true);\r",
                    "            }\r",
                    "\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "        panel.query('#contactStuff')[0].setHidden(false);\r",
                    "        panel.down('#contactStuff1').setHidden(true);\r",
                    "        panel.query('#userNewMessageSettings')[0].setHidden(false);\r",
                    "        if(controller.phoneUser)\r",
                    "        {\r",
                    "            panel.down('#disconnectVkId').setHidden(false);\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.down('#disconnectVkId').setHidden(true);\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "        var button=panel.down('#callToFriendButton');\r",
                    "        var button1=panel.down('#createMessageToFriendButton1');\r",
                    "\r",
                    "\r",
                    "        var contact=record;\r",
                    "\r",
                    "        button.setHidden(true);\r",
                    "        button1.setHidden(true);\r",
                    "\r",
                    "        if(contact.get('mobile_phone'))\r",
                    "        {\r",
                    "            var phone1=contact.get('mobile_phone');\r",
                    "            button.setText(ux.locale.Manager.get('labels.Call')+' '+phone1);\r",
                    "            button.phone=phone1;\r",
                    "            button.setHidden(false);\r",
                    "            button1.setText(ux.locale.Manager.get('labels.sendSMS')+' '+phone1);\r",
                    "            button1.phone=phone1;\r",
                    "            button1.setHidden(false);\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            button.setHidden(true);\r",
                    "            button1.setHidden(true);\r",
                    "        }\r",
                    "\r",
                    "        if(contact.get('status'))\r",
                    "        {\r",
                    "\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "        if(contact.get('contacts')&&contact.get('contacts').home_phone)\r",
                    "        {\r",
                    "            var phone2=contact.get('contacts').home_phone;\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "\r",
                    "        var userId=record.get('id');\r",
                    "        panel.down('#userNewMessageSettings').userId=userId;\r",
                    "        panel.down('#disconnectVkId').setHidden(true);\r",
                    "\r",
                    "        panel.down('#userNewMessageSettings').setTitle(ux.locale.Manager.get('labels.newMessage'));\r",
                    "        panel.down('#customProps').setLabel(ux.locale.Manager.get('labels.customProps'));\r",
                    "        panel.down('#soundSelect').setLabel(ux.locale.Manager.get('labels.Sound'));\r",
                    "        panel.down('#vibrateToggle').setLabel(ux.locale.Manager.get('labels.Vibrate'));\r",
                    "        panel.down('#bannerToggle').setLabel(ux.locale.Manager.get('labels.Banner'));\r",
                    "        //this.down('#customProps').setTitle(ux.locale.Manager.get('labels.customProps'));\r",
                    "\r",
                    "\r",
                    "        \r",
                    "        \r",
                    "        var defaultNumber;  \r",
                    "        \r",
                    "        panel.down('#contactsStuddButtons1').removeAll();\r",
                    "        console.log(controller.phoneUser);\r",
                    "        if(controller.phoneUser&&controller.phoneUser.get('phoneNumbers'))\r",
                    "        {\r",
                    "            panel.down('#disconnectVkId').setHidden(false);\r",
                    "            for (var i=0;i<controller.phoneUser.get('phoneNumbers').length;i++)\r",
                    "            {\r",
                    "                if(controller.phoneUser.get('phoneNumbers')[i]&&controller.phoneUser.get('phoneNumbers')[i].number)                    \r",
                    "                {\r",
                    "                    if (controller.phoneUser.get('phoneNumbers')[i].number.isDefault)\r",
                    "                    {\r",
                    "                        defaultNumber=controller.phoneUser.get('phoneNumbers')[i].number                            \r",
                    "                    }\r",
                    "                    \r",
                    "                    panel.down('#contactsStuddButtons1').add([                        \r",
                    "                        {\r",
                    "                            xtype: 'button',                                                        \r",
                    "                            margin: 10,\r",
                    "                            ui: 'action',\r",
                    "                            width: '80%',\r",
                    "                            text:ux.locale.Manager.get('labels.Call')+' '+controller.phoneUser.get('phoneNumbers')[i].number,\r",
                    "                            phone:controller.phoneUser.get('phoneNumbers')[i].number,\r",
                    "                            handler:function(button){\r",
                    "                                var appControl = new tizen.ApplicationControl(\"http://tizen.org/appcontrol/operation/dial\",\"tel:\"+button.config.phone, null);\r",
                    "                                tizen.application.launchAppControl(appControl,null,\r",
                    "                                                                   function(){console.log(\"launch appControl succeeded\");},\r",
                    "                                                                   function(e){console.log(\"launch appControl failed. Reason: \" + e.name);},\r",
                    "                                                                   null);\r",
                    "                            }\r",
                    "                        },\r",
                    "                        {\r",
                    "                            xtype: 'button',                                                        \r",
                    "                            margin: 10,\r",
                    "                            ui: 'action',\r",
                    "                            width: '80%',\r",
                    "                            text:ux.locale.Manager.get('labels.sendSMS')+' '+controller.phoneUser.get('phoneNumbers')[i].number,\r",
                    "                            phone:controller.phoneUser.get('phoneNumbers')[i].number,\r",
                    "                            handler:function(button){\r",
                    "                                var appControl = new tizen.ApplicationControl(\r",
                    "                                    'http://tizen.org/appcontrol/operation/compose',\r",
                    "                                    null,\r",
                    "                                    \"text/html\",\r",
                    "                                    null,\r",
                    "                                    [\r",
                    "                                        new tizen.ApplicationControlData(\"http://tizen.org/appcontrol/data/to\", [button.config.phone])\r",
                    "                                    ]\r",
                    "                                );\r",
                    "                                \r",
                    "                                serviceCB = {\r",
                    "                                    onsuccess: function () { console.log('OK');  },\r",
                    "                                    onfailure: function () { console.log('failed'); }\r",
                    "                                };\r",
                    "                                \r",
                    "                                console.log(\"Launch service\");\r",
                    "                                \r",
                    "                                tizen.application.launchAppControl(\r",
                    "                                    appControl,\r",
                    "                                    \"tizen.messages\",\r",
                    "                                    function() {console.log(\"launch application control succeed\"); },\r",
                    "                                    function(e) {console.log('launch appControl failed. Reason: ' + e.name)},\r",
                    "                                    serviceCB\r",
                    "                                );\r",
                    "                            }\r",
                    "                        }\r",
                    "                        \r",
                    "                    ])\r",
                    "                    \r",
                    "                }\r",
                    "            }\r",
                    "            \r",
                    "        }        \r",
                    "        \r",
                    "        \r",
                    "        \r",
                    "    \r",
                    "        \r",
                    "        \r",
                    "        var settingsStore=Ext.getStore('userSettings');\r",
                    "\r",
                    "        var record1=settingsStore.getById(userId);\r",
                    "\r",
                    "        var soundSelect=[\r",
                    "            {\r",
                    "                value:'none',\r",
                    "                text:ux.locale.Manager.get('labels.none')\r",
                    "            },\r",
                    "            {\r",
                    "                value:1,\r",
                    "                text:\"#1\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:2,\r",
                    "                text:\"#2\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:3,\r",
                    "                text:\"#3\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:4,\r",
                    "                text:\"#4\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:5,\r",
                    "                text:\"#5\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:6,\r",
                    "                text:\"#6\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:7,\r",
                    "                text:\"#7\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:8,\r",
                    "                text:\"#8\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:9,\r",
                    "                text:\"#9\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:10,\r",
                    "                text:\"#10\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:11,\r",
                    "                text:\"#11\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:12,\r",
                    "                text:\"#12\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:13,\r",
                    "                text:\"#13\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:14,\r",
                    "                text:\"#14\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:15,\r",
                    "                text:\"#15\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:16,\r",
                    "                text:\"#16\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:17,\r",
                    "                text:\"#17\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:18,\r",
                    "                text:\"#18\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:19,\r",
                    "                text:\"#19\"\r",
                    "            },\r",
                    "            {\r",
                    "                value:20,\r",
                    "                text:\"#20\"\r",
                    "            }\r",
                    "        ];\r",
                    "\r",
                    "        panel.down('#soundSelect').setOptions(soundSelect);\r",
                    "\r",
                    "\r",
                    "        VKM.app.globals.isInit=true;\r",
                    "        if(record1)\r",
                    "        {\r",
                    "            if (record1.get('sound'))\r",
                    "            {\r",
                    "                panel.down('#soundSelect').setValue(record1.get('sound'));\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "                panel.down('#soundSelect').setValue(false);\r",
                    "            };\r",
                    "            if (record1.get('vibrate'))\r",
                    "            {\r",
                    "                panel.down('#vibrateToggle').setValue(record1.get('vibrate'));\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "                panel.down('#vibrateToggle').setValue(false);\r",
                    "            };\r",
                    "            if (record1.get('banner'))\r",
                    "            {\r",
                    "                panel.down('#bannerToggle').setValue(record1.get('banner'));\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "                panel.down('#bannerToggle').setValue(false);\r",
                    "            };\r",
                    "            if (record1.get('isActive'))\r",
                    "            {\r",
                    "                \r",
                    "                panel.down('#customProps').setValue(record1.get('isActive'));\r",
                    "                if(!record1.get('isActive'))\r",
                    "                {\r",
                    "                    panel.down('#soundSelect').setDisabled(true);\r",
                    "                    panel.down('#vibrateToggle').setDisabled(true);\r",
                    "                    panel.down('#bannerToggle').setDisabled(true);\r",
                    "                }\r",
                    "\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "                panel.down('#customProps').setValue(false);\r",
                    "                panel.down('#soundSelect').setDisabled(true);\r",
                    "                panel.down('#vibrateToggle').setDisabled(true);\r",
                    "                panel.down('#bannerToggle').setDisabled(true);\r",
                    "\r",
                    "            }\r",
                    "            //     if (record.get('keepBanner'))\r",
                    "            //     {\r",
                    "            //         this.down('#keepBannerCheck').setValue(record.get('isActive'));\r",
                    "            //     };\r",
                    "        }\r",
                    "        else\r",
                    "        {\r",
                    "            panel.down('#customProps').setValue(false);\r",
                    "            panel.down('#soundSelect').setDisabled(true);\r",
                    "            panel.down('#vibrateToggle').setDisabled(true);\r",
                    "            panel.down('#bannerToggle').setDisabled(true);\r",
                    "            \r",
                    "            panel.down('#soundSelect').setValue(null);\r",
                    "            panel.down('#vibrateToggle').setValue(null);\r",
                    "            panel.down('#bannerToggle').setValue(null);\r",
                    "        }\r",
                    "\r",
                    "\r",
                    "        VKM.app.globals.isInit=false;\r",
                    "    }\r",
                    "               });\r",
                    "\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    if(controller.currentPhoneContact)\r",
                    "    {\r",
                    "        var isOnlineCls=null;\r",
                    "        console.log(controller.currentPhoneContact);\r",
                    "        panel.down('#userText').setHtml('<span '+isOnlineCls+'>'+controller.currentPhoneContact.get('displayName')+'</span>');\r",
                    "        var photoUri='resources/images/no_photo_user.png';\r",
                    "\r",
                    "        if(controller.currentPhoneContact.get('photoURI'))\r",
                    "        {                                    \r",
                    "            if(controller.currentPhoneContact.get('photoURI').slice(-4)!='null')\r",
                    "            {\r",
                    "                photoUri=controller.currentPhoneContact.get('photoURI');\r",
                    "            }\r",
                    "            console.log(controller.currentPhoneContact.get('photoURI').slice(-4)!='null')\r",
                    "        }\r",
                    "        panel.down('#userPhoto').setHtml('<img width=200 src=\"'+photoUri+'\"></img>');\r",
                    "        \r",
                    "        \r",
                    "        panel.down('#contactStuff').setHidden(true);\r",
                    "        var contactsStuff1=panel.down('#contactStuff1');\r",
                    "        contactsStuff1.setHidden(false);\r",
                    "        \r",
                    "        \r",
                    "        if(controller.currentPhoneContact.get('vkId'))\r",
                    "        {\r",
                    "            contactsStuff1.down('#connectVkId').setHidden(true);\r",
                    "            contactsStuff1.down('#inviteFriend').setHidden(false);\r",
                    "            contactsStuff1.down('#body').setHidden(true);\r",
                    "        }\r",
                    "        else        \r",
                    "        {\r",
                    "            contactsStuff1.down('#connectVkId').setHidden(false);\r",
                    "            contactsStuff1.down('#inviteFriend').setHidden(false);\r",
                    "            contactsStuff1.down('#body').setHidden(false);            \r",
                    "            contactsStuff1.down('#body').setHtml(ux.locale.Manager.get('labels.unregisteredYet'));\r",
                    "        }            \r",
                    "        var defaultNumber;        \r",
                    "        contactsStuff1.down('#contactsStuddButtons').removeAll();\r",
                    "        if(controller.currentPhoneContact.get('phoneNumbers'))\r",
                    "        {\r",
                    "            for (var i=0;i<controller.currentPhoneContact.get('phoneNumbers').length;i++)\r",
                    "            {\r",
                    "                console.log(controller.currentPhoneContact.get('phoneNumbers')[i]);\r",
                    "                \r",
                    "                //defaultNumber\r",
                    "                if(controller.currentPhoneContact.get('phoneNumbers')[i]&&controller.currentPhoneContact.get('phoneNumbers')[i].number)                    \r",
                    "                {\r",
                    "                    if (controller.currentPhoneContact.get('phoneNumbers')[i].number.isDefault)\r",
                    "                    {\r",
                    "                        defaultNumber=controller.currentPhoneContact.get('phoneNumbers')[i].number                            \r",
                    "                    }\r",
                    "                    \r",
                    "                    contactsStuff1.down('#contactsStuddButtons').add([                        \r",
                    "                        {\r",
                    "                            xtype: 'button',                                                        \r",
                    "                            margin: 10,\r",
                    "                            ui: 'action',\r",
                    "                            width: '80%',\r",
                    "                            text:ux.locale.Manager.get('labels.Call')+' '+controller.currentPhoneContact.get('phoneNumbers')[i].number,\r",
                    "                            phone:controller.currentPhoneContact.get('phoneNumbers')[i].number,\r",
                    "                            handler:function(button){\r",
                    "                                var appControl = new tizen.ApplicationControl(\"http://tizen.org/appcontrol/operation/dial\",\"tel:\"+button.config.phone, null);\r",
                    "                                tizen.application.launchAppControl(appControl,null,\r",
                    "                                                                   function(){console.log(\"launch appControl succeeded\");},\r",
                    "                                                                   function(e){console.log(\"launch appControl failed. Reason: \" + e.name);},\r",
                    "                                                                   null);\r",
                    "                            }\r",
                    "                        },\r",
                    "                        {\r",
                    "                            xtype: 'button',                                                        \r",
                    "                            margin: 10,\r",
                    "                            ui: 'action',\r",
                    "                            width: '80%',\r",
                    "                            text:ux.locale.Manager.get('labels.sendSMS')+' '+controller.currentPhoneContact.get('phoneNumbers')[i].number,\r",
                    "                            phone:controller.currentPhoneContact.get('phoneNumbers')[i].number,\r",
                    "                            handler:function(button){\r",
                    "                                var appControl = new tizen.ApplicationControl(\r",
                    "                                    'http://tizen.org/appcontrol/operation/compose',\r",
                    "                                    null,\r",
                    "                                    \"text/html\",\r",
                    "                                    null,\r",
                    "                                    [\r",
                    "                                        new tizen.ApplicationControlData(\"http://tizen.org/appcontrol/data/to\", [button.config.phone])\r",
                    "                                    ]\r",
                    "                                );\r",
                    "                                \r",
                    "                                serviceCB = {\r",
                    "                                    onsuccess: function () { console.log('OK');  },\r",
                    "                                    onfailure: function () { console.log('failed'); }\r",
                    "                                };\r",
                    "                                \r",
                    "                                console.log(\"Launch service\");\r",
                    "                                \r",
                    "                                tizen.application.launchAppControl(\r",
                    "                                    appControl,\r",
                    "                                    \"tizen.messages\",\r",
                    "                                    function() {console.log(\"launch application control succeed\"); },\r",
                    "                                    function(e) {console.log('launch appControl failed. Reason: ' + e.name)},\r",
                    "                                    serviceCB\r",
                    "                                );\r",
                    "                            }\r",
                    "                        }\r",
                    "                        \r",
                    "                    ])\r",
                    "                                       \r",
                    "                }\r",
                    "            }\r",
                    "            if(!defaultNumber&&controller.currentPhoneContact.get('phoneNumbers').length>0)\r",
                    "            {\r",
                    "                defaultNumber=controller.currentPhoneContact.get('phoneNumbers')[0].number;                \r",
                    "            }\r",
                    "            if(defaultNumber)\r",
                    "            {\r",
                    "                contactsStuff1.down('#inviteFriend').phone=defaultNumber\r",
                    "            }\r",
                    "            else\r",
                    "            {\r",
                    "                contactsStuff1.down('#inviteFriend').setHidden(true)\r",
                    "            }\r",
                    "            \r",
                    "            \r",
                    "//             button.setText(ux.locale.Manager.get('labels.Call')+' '+phone1);\r",
                    "//             button.phone=phone1;\r",
                    "//             button.setHidden(false);\r",
                    "//             button1.setText(ux.locale.Manager.get('labels.sendSMS')+' '+phone1);\r",
                    "//             button1.phone=phone1;\r",
                    "//             button1.setHidden(false);\r",
                    "        }        \r",
                    "        \r",
                    "                \r",
                    "             \r",
                    "    }\r",
                    "    \r",
                    "}"
                ]
            },
            "designerId": "54f10fe4-e9c3-44ea-867b-ccce01781ca1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#phoneContactsList",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onPhoneContactsListItemTap",
                "implHandler": [
                    "var panel=this.getContactsTabPanel();\r",
                    "this.getContactsTabBar().setHidden(true);\r",
                    "this.currentContact=null;\r",
                    "this.phoneUser=record;\r",
                    "\r",
                    "console.log(record.get('id'));\r",
                    "var settingsStore=Ext.getStore('settings');                                     \r",
                    "srecord=settingsStore.getById('phoneBook_'+record.get('id'));\r",
                    "console.log(srecord);\r",
                    "\r",
                    "if(srecord)\r",
                    "{\r",
                    "    this.vkId=srecord.get('value');\r",
                    "}\r",
                    "else\r",
                    "{\r",
                    "    this.vkId=null\r",
                    "}\r",
                    "\r",
                    "if(this.vkId)\r",
                    "    {       \r",
                    "        record.set({'vkId':this.vkId});\r",
                    "        record.save();\r",
                    "        this.currentContact=Ext.getStore('Users').getById(this.vkId)\r",
                    "        console.log(this.vkId);\r",
                    "        console.log(this.currentContact);\r",
                    "        \r",
                    "        if(!this.currentContact)\r",
                    "        {\r",
                    "            this.currentContact=Ext.getStore('Friends').getById(this.vkId)\r",
                    "        }\r",
                    "        if(!this.currentContact)\r",
                    "        {\r",
                    "            this.currentContact=new VKM.model.User({id:this.vkId});            \r",
                    "        }                \r",
                    "        this.currentPhoneContact=null\r",
                    "    }\r",
                    "else\r",
                    "{\r",
                    "    this.currentPhoneContact=record;\r",
                    "}\r",
                    "this.refreshData(this.getContacts())\r",
                    "panel.setActiveItem(3);\r",
                    ""
                ],
                "name": "itemtap"
            },
            "designerId": "3a83486c-8487-4046-8a84-0ff706875f5f"
        }
    ]
}