/*
 * File: app/view/ContactInfo.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('VKM.view.ContactInfo', {
    extend: 'Ext.Container',
    alias: 'widget.contactinfo',

    requires: [
        'Ext.TitleBar',
        'Ext.Button',
        'Ext.dataview.DataView',
        'Ext.XTemplate'
    ],

    config: {
        hidden: false,
        itemId: 'contactCard',
        layout: 'vbox',
        scrollable: 'vertical',
        items: [
            {
                xtype: 'titlebar',
                docked: 'top',
                itemId: 'userName',
                ui: 'plain',
                layout: {
                    type: 'hbox',
                    pack: 'justify'
                },
                items: [
                    {
                        xtype: 'button',
                        itemId: 'backToContactsButton',
                        ui: 'action',
                        iconCls: 'arrow_left'
                    },
                    {
                        xtype: 'component',
                        flex: 1,
                        itemId: 'userText',
                        style: {
                            'font-weight': 'bold',
                            'text-aligh': 'center',
                            'vertical-aligh': 'center'
                        },
                        width: '90%'
                    }
                ]
            },
            {
                xtype: 'container',
                layout: {
                    type: 'vbox',
                    align: 'center',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'component',
                        itemId: 'userPhoto',
                        width: 200
                    }
                ]
            },
            {
                xtype: 'container',
                hidden: true,
                itemId: 'contactStuff',
                layout: {
                    type: 'vbox',
                    align: 'center',
                    pack: 'center'
                },
                items: [
                    {
                        xtype: 'container',
                        itemId: 'lastseen'
                    },
                    {
                        xtype: 'container',
                        itemId: 'location'
                    },
                    {
                        xtype: 'container',
                        itemId: 'body'
                    },
                    {
                        xtype: 'container',
                        itemId: 'body1',
                        margin: '5px',
                        width: '95%'
                    },
                    {
                        xtype: 'container',
                        itemId: 'friendsTitle'
                    },
                    {
                        xtype: 'dataview',
                        cls: 'dataview-horizontal',
                        height: 135,
                        hidden: true,
                        itemId: 'friendsList',
                        width: '100%',
                        scrollable: 'horizontal',
                        inline: {
                            wrap: false
                        },
                        itemCls: '',
                        itemTpl: [
                            '<div class="img" style="background-image: url({photo_100});"></div><br/><div class="name" style="font-size:8px">{first_name}<br/>{last_name}</div>'
                        ],
                        store: 'FriendsInCommon'
                    },
                    {
                        xtype: 'button',
                        locales: {
                            text: 'labels.writeamessage'
                        },
                        itemId: 'createMessageToFriendButton',
                        margin: 10,
                        ui: 'action',
                        width: '80%'
                    },
                    {
                        xtype: 'button',
                        hidden: true,
                        itemId: 'callToFriendButton',
                        ui: 'action',
                        width: '80%'
                    },
                    {
                        xtype: 'container'
                    },
                    {
                        xtype: 'container'
                    },
                    {
                        xtype: 'button',
                        locales: {
                            text: 'labels.Deletefriend'
                        },
                        id: 'removeFromFriendsButton',
                        itemId: 'mybutton61',
                        style: {
                            'margin-top': '20px'
                        },
                        ui: 'decline',
                        width: '80%'
                    }
                ],
                listeners: [
                    {
                        fn: function(element, eOpts) {
                            var button=this.down('#callToFriendButton');
                            var controller=VKM.app.getController('Contacts');
                            var contact=controller.currentContact;

                            button.setHidden(true);

                            if(contact.get('mobile_phone'))
                            {
                                var phone1=contact.get('mobile_phone');
                                button.setText(ux.locale.Manager.get('labels.Call')+' '+phone1);
                                button.phone=phone1;
                                button.setHidden(false);
                            }
                            else
                            {
                                button.setHidden(true);
                            }

                            if(contact.get('status'))
                            {

                            }


                            if(contact.get('contacts')&&contact.get('contacts').home_phone)
                            {
                                var phone2=contact.get('contacts').home_phone;
                            }

                        },
                        event: 'painted'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onCreateMessageToFriendButtonTap',
                event: 'tap',
                delegate: '#createMessageToFriendButton'
            },
            {
                fn: 'onCallToFriendButtonTap',
                event: 'tap',
                delegate: '#callToFriendButton'
            },
            {
                fn: 'onRemoveFromFriendsButtonTap',
                event: 'tap',
                delegate: '#removeFromFriendsButton'
            },
            {
                fn: 'onContactCardActivate',
                event: 'activate'
            }
        ]
    },

    onCreateMessageToFriendButtonTap: function(button, e, eOpts) {
        var controller=VKM.app.getController('Contacts');
        var contact=controller.currentContact;
        var dialoguesController=VKM.app.getController('Dialogues');
        var user=contact.getData();;
        dialoguesController.createMessage(user);
    },

    onCallToFriendButtonTap: function(button, e, eOpts) {

        var appControl = new tizen.ApplicationControl("http://tizen.org/appcontrol/operation/dial","tel:"+button.phone, null);

        tizen.application.launchAppControl(appControl,null,
                                           function(){console.log("launch appControl succeeded");},
                                           function(e){console.log("launch appControl failed. Reason: " + e.name);},
                                           null);

    },

    onRemoveFromFriendsButtonTap: function(button, e, eOpts) {
        var MB = Ext.MessageBox;
        Ext.apply(MB, {
            YES: { text:ux.locale.Manager.get('labels.Yes'), itemId: 'yes', ui: 'action' },
            NO: { text: ux.locale.Manager.get('labels.No'), itemId: 'no' }
        });
        Ext.apply(MB, {
            YESNO: [MB.NO, MB.YES]
        });

        Ext.Msg.confirm(ux.locale.Manager.get('labels.DeleteConfirm'), "", function(e){
            if(e == 'yes'){
                var controller=VKM.app.getController('Contacts');
                var contact=controller.currentContact;
                var url='https://api.vk.com/method/friends.delete';
                var params=
                    {
                        v:'5.4',
                        access_token:VKM.app.globals.authData['access_token'],
                        user_id:contact.get('id')
                    };
                var dataController=VKM.app.getController('DataLoader');
                Ext.getStore('Friends').remove(contact);
                controller.getContactsTabBar().setHidden(false);
                controller.getContactsTabPanel().setActiveItem(0);

                dataController.go(url,params);

            }
        });
    },

    onContactCardActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        var controller=VKM.app.getController('Contacts');
        var panel=this;
        var params=
            {
                v:'5.3',
                access_token:VKM.app.globals.authData['access_token'],
                target_uid:controller.currentContact.get('id')
            };

        var store=Ext.getStore('FriendsInCommon');
        store.removeAll();
        store.getProxy().setExtraParams(params);
        store.getProxy().setUrl("https://api.vk.com/method/execute.friendsInCommon");
        store.getProxy().setReader(
            Ext.create("ux.Contact",
                       {
                           rootProperty: 'response.friends'
                       }
                      )
        );
        store.load({callback:function(request,success,response){
            var record=Ext.getStore('Users').getById(controller.currentContact.get('id'));
            var panel=Ext.ComponentQuery.query('#contactCard')[0];



            var isOnlineCls="";
            if (record.get('online'))
            {
                isOnlineCls='class="userOnline"';
            }
            else
            {
                isOnlineCls='class="userOffline"';
            }

            var photo =record.get('photo_200')
            if (!photo)
            {
                photo=record.get('photo_200_orig');
            }

            panel.down('#userText').setHtml('<span '+isOnlineCls+'>'+record.get('first_name')+' '+record.get('last_name')+'</span>');
            panel.down('#userPhoto').setHtml('<img src="'+photo+'"></img>');
            //console.log(1);
            //this.loadChatHeaderData(record.get('user_id'));
            //controller.loadChatMessagesStep1(record.get('user_id'));


            //console.log(record)

            var title=panel.down('#friendsTitle');
            title.setHtml(ux.locale.Manager.get('labels.mutualFriends')+'('+store.getCount()+'):');
            var friendsList=panel.down('#friendsList');


            var location='';

            var country=record.get('countryName');
            if(country)
            {
                location=country+',';
            }

            var city=record.get('cityName');
            if(city)
            {
                location+=city;
            }
            if(location!='')
            {
                panel.query('#location')[0].setHidden(false);
                var html='<b>'+location+'</b>';
                panel.query('#location')[0].setHtml(html);
            }
            else
            {
                panel.query('#location')[0].setHidden(true);
            }


            var university_name=record.get('university_name');

            var html='';

            if(university_name)
            {
                panel.query('#body')[0].setHidden(false);
                html+=university_name
                panel.query('#body')[0].setHtml(html);
            }
            else
            {
                panel.query('#body')[0].setHidden(true);
            }
            var status=record.get('status');
            var statusComponent=panel.query('#body1')[0]

            if(status)
            {
                console.log(status);
                statusComponent.setHidden(false);
                statusComponent.setHtml('<i>'+VKM.app.smiles(status)+'</i>');
            }
            else
            {
                statusComponent.setHidden(true);
            }

        //     console.log(statusComponent.getHtml());
        //     console.log(statusComponent.setHeight(100));
        //     console.log(statusComponent.setWidth(100));

            if (record.get('last_seen'))
            {
                var last_seen=new Date(parseInt(record.get('last_seen').time)*1000);
                panel.query('#lastseen')[0].setHidden(false);
                panel.query('#lastseen')[0].setHtml(ux.locale.Manager.get('labels.lastvisit')+' '+moment(last_seen).fromNow());
            }
            else
            {
                panel.query('#lastseen')[0].setHidden(false);
            }




            if (store.getCount()>0)
            {
                friendsList.setHidden(false);
            }
            else
            {
                friendsList.setHidden(true);
                title.setHtml(ux.locale.Manager.get('labels.noMutualFriends'));
            }
            panel.query('#contactStuff')[0].setHidden(false);

        }
                   });




        //console.log(record);
        //this.down('#name').setHtml('<span '+isOnlineCls+'>'+Ext.String.ellipsis(user.get('first_name')+' '+user.get('last_name'),23)+'</span>'); //+isOnline);
        // var isOnlineCls="";
        // if (user.get('online'))
        // {
        //     isOnlineCls='class="userOnline"';

        // }
        // else
        // {
        //     isOnlineCls='class="userOffline"';
        // }






    }

});