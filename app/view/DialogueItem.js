/*
 * File: app/view/DialogueItem.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('VKM.view.DialogueItem', {
    extend: 'Ext.dataview.component.ListItem',
    alias: 'widget.dialogueitem',

    requires: [
        'Ext.Container',
        'Ext.Img'
    ],

    config: {
        padding: '5 10 10 10',
        layout: 'vbox',
        itemCls: 'x-list-item',
        items: [
            {
                xtype: 'container',
                cls: 'multiChat',
                docked: 'left',
                height: 64,
                itemId: 'chatImages',
                layout: 'vbox',
                items: [
                    {
                        xtype: 'container',
                        flex: 1,
                        layout: 'hbox',
                        items: [
                            {
                                xtype: 'image',
                                itemId: 'avatar1',
                                margin: 2,
                                style: 'style="border-radius: 50% 50% 50% 50%"',
                                width: 30
                            },
                            {
                                xtype: 'image',
                                itemId: 'avatar2',
                                margin: 2,
                                style: 'style="border-radius: 50% 50% 50% 50%"',
                                width: 30
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        flex: 1,
                        layout: 'hbox',
                        items: [
                            {
                                xtype: 'image',
                                itemId: 'avatar3',
                                margin: 2,
                                style: 'style="border-radius: 50% 50% 50% 50%"',
                                width: 30
                            },
                            {
                                xtype: 'image',
                                itemId: 'avatar4',
                                margin: 2,
                                style: 'style="border-radius: 50% 50% 50% 50%"',
                                width: 30
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'image',
                docked: 'left',
                itemId: 'avatar',
                margin: 2,
                style: 'style="border-radius: 50% 50% 50% 50%"',
                width: 60
            },
            {
                xtype: 'container',
                cls: 'multiChat',
                margin: 0,
                layout: {
                    type: 'hbox',
                    align: 'start'
                },
                items: [
                    {
                        xtype: 'component',
                        flex: 1,
                        cls: 'name',
                        itemId: 'name'
                    },
                    {
                        xtype: 'component',
                        cls: 'x-item-datetime',
                        itemId: 'datetime'
                    }
                ]
            },
            {
                xtype: 'container',
                cls: 'multiChat',
                margin: 0,
                layout: {
                    type: 'hbox',
                    align: 'start'
                },
                items: [
                    {
                        xtype: 'image',
                        docked: 'left',
                        itemId: 'avatar0',
                        margin: 2,
                        style: 'style="border-radius: 50% 50% 50% 50%"',
                        width: 30
                    },
                    {
                        xtype: 'component',
                        flex: 1,
                        itemId: 'body',
                        maxWidth: 300
                    }
                ]
            }
        ]
    },

    updateRecord: function(record) {
        if (!record) return
        //console.log(record);
        if(!Ext.getStore('Users').getById(VKM.app.globals.authData.user_id)) return


        if(record.get('did')!=0)
        {
            var user=Ext.getStore('Users').getById(record.get('user_id'));
            var name=record.get('name');
            if(!user)
            {
                console.log(record);
                return
            }

            if(!name)
            {
                name=user.get('first_name')+' '+user.get('last_name');
                var userData=record.getData();
                userData.name=name;
                record.set(userData);
                // record.save();

            };

            //this.down('#avatar').setSrc(user.get('photo_50'));

            if (!VKM.app.globals.me)
            {

                VKM.app.globals.me=Ext.getStore('Users').getById(VKM.app.globals.authData.user_id).getData();;
            }

            var isOnlineCls="";
            if (user.get('online')&&!record.get('chat_id'))
            {
                isOnlineCls='class="userOnline"';
            }
            else
            {
                isOnlineCls='class="userOffline"';
            }


            if (record.get('chat_id'))
            {
                this.down('#avatar').setHidden(true);
                var owner=Ext.getStore('Users').getById(record.get('admin_id'));
                var members=record.get('chat_active');
                if (members[0])
                {
                    var member=Ext.getStore('Users').getById(members[0]);
                    this.down('#avatar1').setSrc(member.get('photo_50'));
                }
                if (members[1])
                {
                    var member=Ext.getStore('Users').getById(members[1]);
                    this.down('#avatar2').setSrc(member.get('photo_50'));
                }
                if (members[2])
                {
                    var member=Ext.getStore('Users').getById(members[2]);
                    this.down('#avatar3').setSrc(member.get('photo_50'));
                }
                if (members[3])
                {
                    var member=Ext.getStore('Users').getById(members[3]);
                    this.down('#avatar4').setSrc(member.get('photo_50'));
                }
                this.down('#avatar0').setHidden(false);
                this.down('#avatar0').setSrc(user.get('photo_50'));
                this.down('#name').setHtml('<span '+isOnlineCls+'>'+Ext.String.ellipsis(record.get('title'),23)+'</span>'); //+isOnline);
                //this.down('#name').setHtml('<span '+isOnlineCls+'>'+Ext.String.ellipsis(user.get('first_name')+' '+user.get('last_name'),23)+'</span>'); //+isOnline);

            }
            else
            {
                this.down('#chatImages').setHidden(true);
                this.down('#avatar').setSrc(user.get('photo_50'));
                this.down('#avatar').setHidden(false);
                if (record.get('out'))
                {
                    this.down('#avatar0').setHidden(false);
                    this.down('#avatar0').setSrc(VKM.app.globals.me.photo_50);
                }
                else
                {
                    this.down('#avatar0').setHidden(true);
                }
                this.down('#name').setHtml('<span '+isOnlineCls+'>'+Ext.String.ellipsis(name,23)+'</span>'); //+isOnline);

            }

            //




            if (record.get('date'))
            {
                var date=new Date(record.get('date')*1000);
                var currentDate=new Date(Ext.DateExtras.now());
                var messageDate=date;

                this.down('#datetime').setHtml(moment(messageDate).fromNow());
            }

            var messageBody='';
            if(record.get('body'))
            {
                messageBody=Ext.String.ellipsis(record.get('body'),70,true)
            }
            if(record.get('emoji'))
            {
                messageBody=VKM.app.smiles(messageBody);
                //    messageBody='<div>'+messageBody+'</div>';

            }

            var photo='';
            var video='';
            var document='';
            var audio='';
            var map='';
            var fwd='';

            if(record.get('fwd_messages'))
            {
                fwd='<span class="messageIconCls"></span>';
            }
            if(record.get('geo'))
            {
                map='<span class="locationIconCls"></span>';
            }
            if(record.get('attachments'))
            {
                var attachments=record.get('attachments')
                for (var i=0;i<attachments.length;i++)
                {
                    if (attachments[i].type=='photo')
                    {
                        photo='<span class="photoIconCls"></span>';
                    }
                    if (attachments[i].type=='video')
                    {
                        video='<span class="videoIconCls"></span>';
                    }
                    if (attachments[i].type=='audio')
                    {
                        audio='<span class="musicIconCls"></span>';
                    }
                    if (attachments[i].type=='map')
                    {
                        map='<span class="mapIconCls"></span>';
                    }
                    if (attachments[i].type=='doc')
                    {
                        document='<span class="documentIconCls"></span>';
                    }
                }


            }

            if (record.get('read_state')==0)
            {
                this.down('#body').addCls('unreadMessage');
            }
            else
            {
                this.down('#body').removeCls('unreadMessage');
            }
            this.down('#body').setHtml(fwd+map+audio+video+document+photo+messageBody);//this.down('#avatar').setSrc(record.get('image'));
            //this.down('#completion').setPercentFunded(record.get('percent_funded'));
        }
        else
        {
            this.down('#name').setHtml(ux.locale.Manager.get('labels.loadmore'));
        }
    }

});