/*
 * File: app/view/ChatItem.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('VKM.view.ChatItem', {
    extend: 'Ext.dataview.component.ListItem',
    alias: 'widget.chatItem',

    requires: [
        'Ext.Container',
        'Ext.Img',
        'Ext.Spacer'
    ],

    config: {
        baseCls: 'x-chat-item',
        padding: '5 0 5 10',
        itemCls: 'x-list-item',
        layout: {
            type: 'hbox',
            align: 'start',
            pack: 'end'
        },
        items: [
            {
                xtype: 'component',
                cls: 'checkMarkIcon',
                height: '100%',
                width: '50px'
            },
            {
                xtype: 'container',
                cls: 'multiChat',
                height: '100%',
                hidden: true,
                itemId: 'avatarContainer',
                style: {
                    'margin-left': '-10px',
                    'margin-right': '5px',
                    
                },
                layout: {
                    type: 'hbox',
                    align: 'start'
                },
                items: [
                    {
                        xtype: 'image',
                        itemId: 'avatar0',
                        margin: 2,
                        style: 'style="border-radius: 50% 50% 50% 50%"',
                        width: 30
                    }
                ]
            },
            {
                xtype: 'spacer',
                hidden: true,
                itemId: 'right'
            },
            {
                xtype: 'component',
                cls: 'x-list-time',
                hidden: true,
                itemId: 'timeleft'
            },
            {
                xtype: 'container',
                itemId: 'body',
                maxWidth: 275,
                layout: 'hbox'
            },
            {
                xtype: 'component',
                cls: 'x-list-time',
                hidden: true,
                itemId: 'timeright'
            },
            {
                xtype: 'spacer',
                hidden: true,
                itemId: 'left'
            }
        ],
        listeners: [
            {
                fn: 'onListitemPainted',
                event: 'painted',
                order: 'after'
            }
        ]
    },

    onListitemPainted: function(element, eOpts) {
        //this.getParent().getParent().getScrollable().getScroller().scrollToEnd();
        // console.log('painted');
        // console.log(this.getParent().getParent().doNotScroll);
        if(!this.getParent().getParent().doNotScroll)
        {
            VKM.app.globals.scrollToEndTask.delay(300);
        }


    },

    updateRecord: function(record) {
        if (record)
        {
            if(record.get('id')!=0)
            {
                if(record.get('read_state')==0&&record.get('out')==0)
                {
                    VKM.app.globals.messageIds.push({
                        id:record.get('id'),
                        user_id:record.get('user_id'),
                        chat_id:record.get('chat_id')
                    })
                }

                var body=this.down('#body');
                this.down('#body').removeAll(true,true);
                if (record.get('chat_id')&&(record.get('out')!='1'))
                {
                    this.down('#avatarContainer').setHidden(false);
                    this.down('#avatar0').setHidden(false);
                    var member=Ext.getStore('Users').getById(record.get('from_id'));
                    if(member)
                    {
                        this.down('#avatar0').setSrc(member.get('photo_50'));
                    }

                }
                else
                {
                    this.down('#avatarContainer').setHidden(true);
                    this.down('#avatar0').setHidden(true);
                }
                var date=new Date(parseInt(record.get('date'))*1000);
                var currentDate=new Date(Ext.DateExtras.now());

                var messageBody=record.get('body');

                var messageTime=moment(parseInt(record.get('date'))*1000).format('hh:mm');
                var store=Ext.getStore('Chat')



                messageBody= messageBody.replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,"<a href='$1' target='_blank' style='color:white!important'>$1</a>");
                if(record.get('emoji'))
                {
                    messageBody=VKM.app.smiles(messageBody);
                    messageBody='<div>'+messageBody+'</div>';

                }
                messageBody=messageBody.replace(/\r\n|\r|\n/g,"<br />");


                //console.log(record.getData());
                if (record.get('out')==1)
                {
                    this.down('#left').setHidden(true);
                    this.down('#right').setHidden(false);

                    this.down('#timeright').setHidden(true);
                    this.down('#timeleft').setHidden(false);
                    this.down('#timeleft').setHtml(messageTime);


                    //this.down('#datetime').setHtml(moment(messageDate).fromNow());
                    body.removeCls('triangle-right left');
                    body.addCls('triangle-right right');
                    body.add({
                        xtype: 'component',
                        docked:'top',
                        cls: 'x-item-message',
                        html:messageBody
                    })
                }
                else
                {
                    this.down('#right').setHidden(true);
                    this.down('#left').setHidden(false);
                    this.down('#timeleft').setHidden(true);
                    this.down('#timeright').setHidden(false);
                    this.down('#timeright').setHtml(messageTime);

                    body.removeCls('triangle-right right');
                    body.addCls('triangle-right left');
                    body.add({
                        xtype: 'component',
                        docked:'top',
                        cls: 'x-item-message',
                        html:messageBody
                    })
                }    ;

                var params=
                    {
                        message:record.getData(),
                        body:body,
                        component:this
                    };
                this.renderMessage(params);

            }
            else
            {
                this.setHidden(record.get('user_id'));
                this.removeAll(true,true);
                this.setHtml('<div style="text-align:center">'+ux.locale.Manager.get('labels.loadmore')+'</div>');
            }
        }
    },

    renderMessage: function(params) {

        var record=params.message;
        var body=params.body;
        var component=params.component;
        if(record.geo)
        {
            var latitude=record.geo.coordinates.split(' ')[0];
            var longitude=record.geo.coordinates.split(' ')[1];

            var position = latitude+','+longitude;
        //     //new google.maps.LatLng(latitude,longitude)

        //     var image = new google.maps.MarkerImage(
        //         'resources/images/point.png',
        //         new google.maps.Size(32, 31),
        //         new google.maps.Point(0, 0),
        //         new google.maps.Point(16, 31)
        //     )

        //     var shadow = new google.maps.MarkerImage(
        //         'resources/images/shadow.png',
        //         new google.maps.Size(64, 52),
        //         new google.maps.Point(0, 0),
        //         new google.maps.Point(-5, 42)
        //     )

            var url='http://maps.googleapis.com/maps/api/staticmap?center='+position+
                '&zoom=15&size=260x200&maptype=roadmap&markers=color:blue%7C'+position+'&sensor=true'

            var title=record.geo.title;
            if(record.geo.place)
            {
                title=record.geo.place.title
            }
            body.add({
                xtype: 'component',
                docked: 'top',
                html:'<img width=100% src='+url+'>'+title+'</img>',
                width: 260
                //margin: 2
            });


        //     body.add({
        //         xtype: 'map',
        //         position:position,
        //         //title:record.geo.place.title,
        //         docked: 'top',
        //         height: 200,
        //         width: 260,
        //         margin: 2,
        //         mapOptions:{
        //             zoom: 15,
        //             center : position,
        //             zoomControl: true,
        //             scaleControl: true,
        //         },
        //         listeners: {
        //             maprender: function(comp, map) {

        //                 var marker = new google.maps.Marker({
        //                     position: comp.config.position,
        //                     title : comp.config.title,
        //                     map: map
        //                 });
        //                 var infowindow = new google.maps.InfoWindow({
        //                     content: '<div id="content">'+comp.config.title+'<div id="content">'
        //                 });

        //                 google.maps.event.addListener(marker, 'click', function() {
        //                     infowindow.open(map, marker);
        //                 });
        //             }

        //         }
        //     });

        }

        if(record.attachments)
        {
            var attachments=record.attachments
            for (var i=0;i<attachments.length;i++)
            {
                if (attachments[i].type=='photo')
                {
                    var description=attachments[i].photo.text;
                    description=description.replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,"<a href='$1' target='_blank' style='color:white!important'>$1</a>");
                    description=description.replace(/\r\n|\r|\n/g,"<br />");

                    body.add({
                        xtype: 'component',
                        docked: 'top',
                        html:'<img width=100% src='+attachments[i].photo.photo_604+'></img>',
                        width: 260
                        //margin: 2
                    });
                    //                 this.down('#body').add({
                    //                     xtype: 'component',
                    //                     docked: 'top',
                    //                     html:description,
                    //                     style:{"font-size":"0.8em","font-weight": "light"},
                    //                     margin: 2
                    //                 });
                    //            console.log(record.getData());
                }
                if (attachments[i].type=='doc')

                {
                    var icoName='resources/images/ext/32/'+attachments[i].doc.ext.toUpperCase()+'.png';
                    if (!VKM.app.globals.docIcons[attachments[i].doc.ext.toUpperCase()])
                    {
                        icoName='resources/images/ext/32/Default.png';
                    }

                    body.add({
                        xtype: 'container',
                        docked: 'top',
                        layout:'hbox',
                        cls:"messageBody",
                        style:{"background-color":"#345777!important"},
                        items:[
                            {
                                xtype:"container",
                                flex:1,
        //html:'<span style:"margin-right:5px" class="whiteDocumentIconCls"></span>
                                html:'<img src="'+icoName+'" style:"margin-right:5px"></img><a type="doc" href="'+attachments[i].doc.url+'" style="color:white!important;font-size:0.8em;font-weight:light;vertical-align:top;">'+attachments[i].doc.title+'</a>'

                            },
                            {
                                xtype:'button',
                                //ui:'decline',
                               // docked:'left',
                                ui:'confirm',
                                iconCls:'viewDocument',
                                style:"margin-left:5px",
                                url:Ext.clone(attachments[i].doc.url),
                                ext:Ext.clone(attachments[i].doc.ext)
                                //handler:VKM.app.showDocument([attachments[i].doc.url,attachments[i].doc.ext)
                            }
                        ],
                        margin: 2
                    });

                    //            console.log(record.getData());
                }
                if (attachments[i].type=='audio')
                {

                    body.add({
                        xtype:'container',
                        width:260,
                        docked:'bottom',
                        //margin:5,
                        items:[
        //                     {
        //                         xtype:"container",
        //                         flex:1,
        // //html:'<span style:"margin-right:5px" class="whiteDocumentIconCls"></span>
        //                         html:'<audio data-controls="true" style="width:100%;">'+
        //                         '<source src="'+attachments[i].audio.url+'" type="audio/mp3" /></audio>'

        //                     },

                            Ext.create('ux.AudioPlayer',{
                                xtype: 'audioplayer',
                                docked:'top',
                                //                            width:250,
                                //                             height:40,
                                duration:attachments[i].audio.duration,
                                url  : attachments[i].audio.url,
                                title:attachments[i].audio.artist+', '+attachments[i].audio.title
                            })

                            //                         {
                            //                             xtype:'component',
                            //                             docked:'top',
                            //                             html:attachments[i].audio.artist+', '+attachments[i].audio.title,
                            //                             style:{"font-size":"0.8em","font-weight": "light","margin-bottom":"0.5em"}

                        ]
                    });

                }
                if (attachments[i].type=='video')
                {
                    var description=attachments[i].video.description;
                    description=description.replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,"<a href='$1' target='_blank' style='color:white!important'>$1</a>");
                    description=description.replace(/\r\n|\r|\n/g,"<br />");
                    var id=attachments[i].video.owner_id+'_'+attachments[i].video.id
                    var access_key=attachments[i].video.access_key;
                    if (access_key)
                    {
                        id=id+'_'+access_key;
                    }
                    var date=new Date(attachments[i].video.date);
                    var comments=attachments[i].video.comments;
                    var views=attachments[i].video.views
                    var videoContainer=body.add({
                        xtype:'container',
                        docked:'bottom',
                        //margin:5,
                        items:[
        //                     {
        //                         xtype:'component',
        //                         docked:'top',
        //                         html:'<div class="whiteVideoIconCls">'+attachments[i].video.title+'</div>',
        //                         style:{"font-size":"0.8em","font-weight": "light","margin-bottom":"0.5em"}
        //                     },
        //                     {
        //                         html:'<a onclick=" alert(\''+ux.locale.Manager.get('labels.impossible')+'\')" type="video"><img width=100% src='+attachments[i].video.photo_320+'></img></a>',
        //                         width: 260,
        //                         xtype: 'component',
        //                         docked: 'top'
        //                         //html:'<a type="video" href=http://vk.com/video_ext.php?oid=63709057&id=164774633&hash=9a9aa1d37dc57f8d>fff</a>'
        //                     }
                            //                         {
                            //                             xtype:'component',
                            //                             docked:'top',
                            //                             html:description,
                            //                             style:{"font-size":"0.8em","font-weight": "light","margin-bottom":"0.5em"}
                            //                         }
                        ]
                    });
                    //if (!attachments[i].video.player)
                    {
                        var dataController=VKM.app.getController('DataLoader');

                        videoContainer.callback=function(request,resp)
                        {
                           // console.log(arguments);
                            var response=resp.response;
                            if(response.count>0)
                            {

                                request.request.options.extraData.add({
                                    width: 260,
                                    xtype: 'component',
                                    docked: 'top',
                                   // html:'<a  href="'+response.items[0].player+'?html5=1">'+response.items[0].title+'</a>'
                                    html:'<img t="video0" class="'+response.items[0].player+'?html5=1" width=100% src="'+response.items[0].photo_320+'"></img>',
        //                             '<video data-controls="true" style="width:100%;" data-theme="c">'+
        //                             '<source src="'+response.items[0].player+'?html5=1'+'" type="video/mp4" /></video>'

                                });

        //                         request.request.options.extraData.add({
        //                             xtype: 'video',
        //                             width    : 260,
        //                             height   : 200,
        //                             url: [
        //                                 response.items[0].player+'?html5=1'
        //                             ],
        //                             loop: false,
        //                             posterUrl: response.items[0].photo_320
        //                         })

                            }
                        }


                        var url='https://api.vk.com/method/video.get';
                        var params=
                            {
                                v:'5.3',
                                videos:id,
                                access_token:VKM.app.globals.authData['access_token'],
                                access_key:access_key
                            };
                        dataController.go(url,params,videoContainer.callback,videoContainer);
                    }

                }

                //doc.title
                //doc.url
                //doc.ext
            }
        };
        if(record.fwd_messages)
        {
            var fwdMessages=body.add(
                {
                    xtype: 'container',
                    layout: {
                        align: 'start',
                        type: 'vbox'
                    },
                    style: {'border-left':'3px dotted white',"padding-left":"5px","padding-top":"5px"},
                }
            )

            for (var i=0;i<record.fwd_messages.length;i++)
            {
                var message=record.fwd_messages[i];
                var mdate=new Date(message.date);
                var member=Ext.getStore('Users').getById(message['user_id']);
                fwdMessages.add(
                    {
                        xtype: 'container',
                        cls: 'multiChat',
                        style: {
                            "margin-left":"5px"

                        },
                        layout: {
                            align: 'start',
                            type: 'vbox'
                        },
                        items: [
                            {
                                xtype: 'image',
                                docked: 'left',
                                itemId: 'avatar0',
                                margin: 2,
                                style: 'style="border-radius: 50% 50% 50% 50%"',
                                width: 30,
                                cls:'blueBackground',
                                src:member.get('photo_50')
                            },
                            {
                                xtype: 'component',
                                cls: 'x-item-name',
                                html: member.get('first_name')+' '+member.get('last_name')
                            },
                            {
                                xtype: 'component',
                                cls: 'x-item-time',
                                html: moment(mdate).format('D MMMM d:mm')
                            }
                        ]
                    });

                var messageBody=message.body;
                messageBody= messageBody.replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,"<a href='$1' target='_blank' style='color:white!important'>$1</a>");
                messageBody=VKM.app.smiles(messageBody);
                messageBody='<div>'+messageBody+'</div>';


                messageBody=messageBody.replace(/\r\n|\r|\n/g,"<br />");
                var text=fwdMessages.add({
                    xtype: 'component',
                    cls: 'x-item-body',
                    style:{"margin-bottom":"5px"},
                    html:messageBody
                })


                var newBody=fwdMessages.add({
                    xtype: 'container',
                    cls: 'x-item-body',
                    style:{"margin-bottom":"5px"}
                })
                var params={
                    message:message,
                    body:newBody,
                    component:component
                };
                component.renderMessage(params);
            }
        }


    }

});