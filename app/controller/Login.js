/*
 * File: app/controller/Login.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('VKM.controller.Login', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            firstScreen: 'panel#firstScreen',
            mainTabPanel: 'tabpanel#mainTabPanel'
        }
    },

    go: function() {

        if(this.getFirstScreen())
        {
            this.getFirstScreen().destroy();
        }


        setInterval(function(){
            var lastPoll=VKM.app.globals.lastTime;
            var currTime=Ext.DateExtras.now();

            if(currTime-lastPoll>30000&&!VKM.app.globals.doNotReconnect)
            {
                console.log('reconnect');
                console.log(currTime);
                console.log(lastPoll);
                VKM.app.getController('InitDataLoader').initLongPolling();
            }
            {
               // console.log('ok');
            }

        },10000)


        setInterval(function(){
            if(VKM.app.globals.messageIds&&VKM.app.globals.messageIds.length>0)
            {
                var messages=VKM.app.globals.messageIds.pop();
                var url='https://api.vk.com/method/messages.markAsRead';
                var userid=messages.user_id;
                if(messages.chat_id)
                {
                    userid=parseInt(messages.chat_id)+2000000000
                }
                var params=
                    {
                        v:'5.5',
                        access_token:VKM.app.globals.authData['access_token'],
                        message_ids:messages.id
                    };
                if(userid)
                {
                    params.user_id=userid;
                }


                var dataController=VKM.app.getController('DataLoader');
                dataController.go(url,params,function(){});
            }

        },1100)




        setInterval(function(){
                var messages=VKM.app.globals.messageIds.pop();
                var url='https://api.vk.com/method/account.setOnline';

                var params=
                    {
                        v:'5.5',
                        access_token:VKM.app.globals.authData['access_token']

                    };
                var dataController=VKM.app.getController('DataLoader');
                dataController.go(url,params,function(){});
        },100000)




        console.log(VKM.app.globals.authData)
        Ext.create('VKM.view.MainTabPanel', {fullscreen: true});
        VKM.app.getController('InitDataLoader').loadUnreadMessagesStep1(true);

    },

    relogin: function(url, params, callback, extraData) {
        var url='https://oauth.vk.com/authorize?client_id=3967300&scope=notify,friends,photos,audio,video,docs,notes,status,messages,notifications&redirect_uri=https://oauth.vk.com/blank.html&display=mobile&response_type=token';

        VKM.app.authenticate=function () {
            window.authCount = 0;
            var name=VKM.app.uuid();
            window.authWin = window.open(url, name,"",true);
            VKM.app.globals.loginWindow=window.authWin;
            VKM.app.watchOAuth();
            return;
        };

        VKM.app.watchOAuth= function () {
            window.intv = self.setInterval(function () {
                window.authCount = window.authCount + 1;
                if (window.authWin && window.authWin.location) {
                    var currentURL = window.authWin.location.href;
                    var inCallback = currentURL.indexOf("access_token=");

                    if (inCallback >= 0) {
                        var authData = currentURL.substr(currentURL.indexOf("#"));
                        window.clearInterval(intv);
                        window.authWin.close();
                        VKM.app.globals.authData=VKM.app.getJsonFromUrl(authData);
                        VKM.app.globals.authData['_id']='authData';
                        VKM.app.globals.authData.expiresTime=Ext.DateExtras.now()+1000*parseInt(VKM.app.globals.authData.expires_in);
                        var settingsStore=Ext.getStore('settings');
                        var record=new VKM.model.localConfig({id:'expires_in',value:VKM.app.globals.authData['expires_in']});
                        settingsStore.add(record);
                        record.save();
                        record=new VKM.model.localConfig({id:'access_token',value:VKM.app.globals.authData['access_token']});
                        settingsStore.add(record);
                        record.save();
                        record=new VKM.model.localConfig({id:'user_id',value:VKM.app.globals.authData['user_id']});
                        settingsStore.add(record);
                        record.save();
                        record=new VKM.model.localConfig({id:'expiresTime',value:VKM.app.globals.authData['expiresTime']});
                        settingsStore.add(record);
                        record.save();
                        settingsStore.sync();

                        VKM.app.getController('Login').go();
                    }
                }
                if (window.authCount > 600) {
                    //alert('5 minutes login time out');
                    window.authCount  =0;
                    window.clearInterval(intv);
                    window.authWin.close();
                }
            }, 500);
        }
        VKM.app.authenticate();



        //var pageHtml=VKM.app.loadUrl(url);





        // var loginPanel= Ext.create("VKM.view.HtmlPanel",{
        //     fullscreen: true,
        //     html: pageHtml
        // });





        // loginPanel.show();


    },

    relogin1: function(proxy, callback) {
        var url='https://oauth.vk.com/authorize?client_id=3967300&scope=notify,friends,photos,audio,video,docs,notes,status,messages,notifications&redirect_uri=https://oauth.vk.com/blank.html&display=mobile&response_type=token';

        VKM.app.authenticate=function () {
            window.authCount = 0;
            var name=VKM.app.uuid();
            window.authWin = window.open(url, name,"",true);
            VKM.app.globals.loginWindow=window.authWin;
            VKM.app.watchOAuth();
            return;
        };

        VKM.app.watchOAuth= function () {
            window.intv = self.setInterval(function () {
                window.authCount = window.authCount + 1;
                if (window.authWin && window.authWin.location) {
                    var currentURL = window.authWin.location.href;
                    var inCallback = currentURL.indexOf("access_token=");

                    if (inCallback >= 0) {
                        var authData = currentURL.substr(currentURL.indexOf("#"));
                        window.clearInterval(intv);
                        window.authWin.close();
                        VKM.app.globals.authData=VKM.app.getJsonFromUrl(authData);
                        VKM.app.globals.authData['_id']='authData';
                        VKM.app.globals.authData.expiresTime=Ext.DateExtras.now()+1000*parseInt(VKM.app.globals.authData.expires_in);
                        var settingsStore=Ext.getStore('settings');
                        var record=new VKM.model.localConfig({id:'expires_in',value:VKM.app.globals.authData['expires_in']});
                        settingsStore.add(record);
                        record.save();
                        record=new VKM.model.localConfig({id:'access_token',value:VKM.app.globals.authData['access_token']});
                        settingsStore.add(record);
                        record.save();
                        record=new VKM.model.localConfig({id:'user_id',value:VKM.app.globals.authData['user_id']});
                        settingsStore.add(record);
                        record.save();
                        record=new VKM.model.localConfig({id:'expiresTime',value:VKM.app.globals.authData['expiresTime']});
                        settingsStore.add(record);
                        record.save();
                        settingsStore.sync();
                        proxy.setExtraParam('access_token',VKM.app.globals.authData['access_token'])
                        callback();
                    }
                }
                if (window.authCount > 600) {
                    //alert('5 minutes login time out');
                    window.authCount  =0;
                    window.clearInterval(intv);
                    window.authWin.close();
                }
            }, 500);
        }
        VKM.app.authenticate();
    }

});